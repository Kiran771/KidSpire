/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.kidspire.view;

import com.kidspire.controller.algorithm.BinarySearch;
import com.kidspire.model.BabysitterModel;
import com.kidspire.util.ValidationUtil;
import com.kidspire.controller.algorithm.Sorting;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import java.awt.Color;
import java.util.List;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;

/**
 * This class represents the Babysitter Management GUI, designed to manage
 * babysitter information It enables CRUD operations (Create, Read, Update,
 * Delete) for maintaining babysitter records. User login authentication
 * Interactive GUI for performing actions such as adding, updating,
 * deleting,viewing,sorting, searching babysitter details. Includes an
 * ActionPerformed method to handle button clicks and other user actions within
 * the GUI. The system ensures efficient management of babysitter information
 * while maintaining data integrity.
 *
 * @author kiransaud 23048603
 */
public class BabysitterManagement extends javax.swing.JFrame {

    private java.awt.CardLayout cardLayout;//A cardlayout to manage the switching of multiple panels in a container.
    private final Color errorColor = new Color(255, 51, 0);//Define color to display error
    private final Color successColor = new Color(0, 0, 0);//Define color for successful entry
    private DefaultTableModel defaultTableModel;
    private LinkedList<BabysitterModel> babysitterList;
    private Sorting sorting; // Declare the instance variable for Sorting
    private BinarySearch search;

    /**
     * Constructor that initializes the BabysitterManagement system. Sets up the
     * UI, loads the login screen, initializes the layout, starts the progress
     * bar, initializes the babysitter list, and sorting functionality.
     */
    public BabysitterManagement() {
        initComponents();
        loadLoginScreen();
        initializeLayout();
        startProgress();
        babysitterList = new LinkedList<>();
        initializeData();
        sorting = new Sorting();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlHomeScreen = new javax.swing.JPanel();
        pnlMainTitle = new javax.swing.JPanel();
        lblToAddTitle = new javax.swing.JLabel();
        logOutBtn = new javax.swing.JButton();
        lblLogo = new javax.swing.JLabel();
        pnlSideMenuBar = new javax.swing.JPanel();
        lblWelcomeAdmin = new javax.swing.JLabel();
        btnGoToForm = new javax.swing.JButton();
        lblAdmin = new javax.swing.JLabel();
        lblInfoContact = new javax.swing.JLabel();
        lblPhoneImage = new javax.swing.JLabel();
        lblPhoneNumber = new javax.swing.JLabel();
        aboutUsBtn = new javax.swing.JButton();
        homeWelcomePnl = new javax.swing.JPanel();
        imageLbl = new javax.swing.JLabel();
        pnlLogInScreen = new javax.swing.JPanel();
        pnlLoginDetails = new javax.swing.JPanel();
        lblLogin = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        txtFldUserName = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        btnLogIn = new javax.swing.JButton();
        lblErrorUserName = new javax.swing.JLabel();
        lblErrorPassword = new javax.swing.JLabel();
        passwordFld = new javax.swing.JPasswordField();
        lblForImageInLoginSc = new javax.swing.JLabel();
        adminPnl = new javax.swing.JPanel();
        pnlForm = new javax.swing.JPanel();
        lblBabysitterId = new javax.swing.JLabel();
        txtFieldBabysitterId = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblExperience = new javax.swing.JLabel();
        txtFieldName = new javax.swing.JTextField();
        txtFieldAge = new javax.swing.JTextField();
        txtFieldExperience = new javax.swing.JTextField();
        lblErrorMessageBsId = new javax.swing.JLabel();
        lblErrorMessageName = new javax.swing.JLabel();
        lblErrorMessageAge = new javax.swing.JLabel();
        lblErrorMessageExperience = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        txtFieldAddress = new javax.swing.JTextField();
        lblContact = new javax.swing.JLabel();
        lblErrorMessageAddress = new javax.swing.JLabel();
        txtFieldContact = new javax.swing.JTextField();
        lblErrorMessageContact = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtFieldEmail = new javax.swing.JTextField();
        lblErrorMessageEmail = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        mainScBtn = new javax.swing.JButton();
        pnlSearchSort = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        txtFldSearch = new javax.swing.JTextField();
        cbSort = new javax.swing.JComboBox<>();
        tblPnl = new javax.swing.JPanel();
        spTblBabysitter = new javax.swing.JScrollPane();
        tblToDisplayBabysitterInfo = new javax.swing.JTable();
        pnlAboutUs = new javax.swing.JPanel();
        homeScreenBtn = new javax.swing.JButton();
        aboutUsLbl = new javax.swing.JLabel();
        aboutUsDesLbl4 = new javax.swing.JLabel();
        aboutUsDesLbl3 = new javax.swing.JLabel();
        aboutUsDesLbl2 = new javax.swing.JLabel();
        aboutUsDesLbl1 = new javax.swing.JLabel();
        aboutUsDesLbl5 = new javax.swing.JLabel();
        whatWeDoLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        imageLblCeo = new javax.swing.JLabel();
        lblDesc = new javax.swing.JLabel();
        lblDes1 = new javax.swing.JLabel();
        lblDes2 = new javax.swing.JLabel();
        lblDes3 = new javax.swing.JLabel();
        lblDes4 = new javax.swing.JLabel();
        visionLbl = new javax.swing.JLabel();
        lblVision1 = new javax.swing.JLabel();
        lblVision2 = new javax.swing.JLabel();
        lblVision3 = new javax.swing.JLabel();
        lblVision4 = new javax.swing.JLabel();
        ceoNameLbl = new javax.swing.JLabel();
        memoryLbl = new javax.swing.JLabel();
        memoryLbl1 = new javax.swing.JLabel();
        lblImage1 = new javax.swing.JLabel();
        lblImage2 = new javax.swing.JLabel();
        pnlLoadingScreen = new javax.swing.JPanel();
        pgBarSplashSc = new javax.swing.JProgressBar();
        loadingLbl = new javax.swing.JLabel();
        loadingValueLbl = new javax.swing.JLabel();
        loadingImageLbl = new javax.swing.JLabel();

        pnlHomeScreen.setMaximumSize(new java.awt.Dimension(1000, 674));
        pnlHomeScreen.setMinimumSize(new java.awt.Dimension(1000, 674));
        pnlHomeScreen.setPreferredSize(new java.awt.Dimension(1000, 674));
        pnlHomeScreen.setSize(new java.awt.Dimension(1000, 674));

        pnlMainTitle.setBackground(new java.awt.Color(115, 150, 145));
        pnlMainTitle.setMaximumSize(new java.awt.Dimension(1000, 126));
        pnlMainTitle.setMinimumSize(new java.awt.Dimension(1000, 126));
        pnlMainTitle.setPreferredSize(new java.awt.Dimension(1000, 126));
        pnlMainTitle.setSize(new java.awt.Dimension(1000, 126));

        lblToAddTitle.setBackground(new java.awt.Color(255, 255, 255));
        lblToAddTitle.setFont(new java.awt.Font("Avenir", 1, 24)); // NOI18N
        lblToAddTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblToAddTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblToAddTitle.setText("Babysitter Management System");
        lblToAddTitle.setAlignmentX(0.5F);

        logOutBtn.setBackground(new java.awt.Color(0, 0, 0));
        logOutBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        logOutBtn.setForeground(new java.awt.Color(255, 255, 255));
        logOutBtn.setText("Logout");
        logOutBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        logOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutBtnActionPerformed(evt);
            }
        });

        lblLogo.setFont(new java.awt.Font("Optima", 1, 24)); // NOI18N
        lblLogo.setForeground(new java.awt.Color(255, 255, 255));
        lblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogo.setText("KidSpire");

        javax.swing.GroupLayout pnlMainTitleLayout = new javax.swing.GroupLayout(pnlMainTitle);
        pnlMainTitle.setLayout(pnlMainTitleLayout);
        pnlMainTitleLayout.setHorizontalGroup(
            pnlMainTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainTitleLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblToAddTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(147, 147, 147)
                .addComponent(logOutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        pnlMainTitleLayout.setVerticalGroup(
            pnlMainTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainTitleLayout.createSequentialGroup()
                .addGroup(pnlMainTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainTitleLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(pnlMainTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblToAddTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlMainTitleLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(logOutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pnlSideMenuBar.setBackground(new java.awt.Color(255, 255, 255));
        pnlSideMenuBar.setMaximumSize(new java.awt.Dimension(239, 542));
        pnlSideMenuBar.setMinimumSize(new java.awt.Dimension(239, 542));
        pnlSideMenuBar.setPreferredSize(new java.awt.Dimension(239, 542));
        pnlSideMenuBar.setSize(new java.awt.Dimension(239, 542));

        lblWelcomeAdmin.setBackground(new java.awt.Color(0, 0, 0));
        lblWelcomeAdmin.setFont(new java.awt.Font("Hiragino Sans GB", 0, 18)); // NOI18N
        lblWelcomeAdmin.setText("Welcome, Admin");

        btnGoToForm.setBackground(new java.awt.Color(0, 0, 0));
        btnGoToForm.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        btnGoToForm.setForeground(new java.awt.Color(255, 255, 255));
        btnGoToForm.setText("Manage profiles");
        btnGoToForm.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnGoToForm.setMaximumSize(new java.awt.Dimension(140, 27));
        btnGoToForm.setMinimumSize(new java.awt.Dimension(140, 27));
        btnGoToForm.setPreferredSize(new java.awt.Dimension(140, 27));
        btnGoToForm.setSize(new java.awt.Dimension(140, 27));
        btnGoToForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoToFormActionPerformed(evt);
            }
        });

        lblAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/IMG_6620.JPG"))); // NOI18N
        lblAdmin.setSize(new java.awt.Dimension(182, 158));

        lblInfoContact.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblInfoContact.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblInfoContact.setText("Contact");

        lblPhoneImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/PHONE.png.jpeg"))); // NOI18N
        lblPhoneImage.setSize(new java.awt.Dimension(182, 120));

        lblPhoneNumber.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblPhoneNumber.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPhoneNumber.setText("+977 9804563004");

        aboutUsBtn.setBackground(new java.awt.Color(0, 0, 0));
        aboutUsBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        aboutUsBtn.setForeground(new java.awt.Color(255, 255, 255));
        aboutUsBtn.setText("About Us");
        aboutUsBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        aboutUsBtn.setMaximumSize(new java.awt.Dimension(140, 27));
        aboutUsBtn.setMinimumSize(new java.awt.Dimension(140, 27));
        aboutUsBtn.setPreferredSize(new java.awt.Dimension(140, 27));
        aboutUsBtn.setSize(new java.awt.Dimension(140, 27));
        aboutUsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutUsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSideMenuBarLayout = new javax.swing.GroupLayout(pnlSideMenuBar);
        pnlSideMenuBar.setLayout(pnlSideMenuBarLayout);
        pnlSideMenuBarLayout.setHorizontalGroup(
            pnlSideMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSideMenuBarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblWelcomeAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(pnlSideMenuBarLayout.createSequentialGroup()
                .addGroup(pnlSideMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSideMenuBarLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(pnlSideMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPhoneImage, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlSideMenuBarLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(lblInfoContact, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlSideMenuBarLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(pnlSideMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(aboutUsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGoToForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(5, Short.MAX_VALUE))
        );
        pnlSideMenuBarLayout.setVerticalGroup(
            pnlSideMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSideMenuBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblWelcomeAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGoToForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(aboutUsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblInfoContact, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPhoneImage)
                .addGap(26, 26, 26)
                .addComponent(lblPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        homeWelcomePnl.setBackground(new java.awt.Color(242, 240, 222));
        homeWelcomePnl.setMaximumSize(new java.awt.Dimension(749, 542));
        homeWelcomePnl.setMinimumSize(new java.awt.Dimension(749, 542));
        homeWelcomePnl.setPreferredSize(new java.awt.Dimension(749, 542));
        homeWelcomePnl.setSize(new java.awt.Dimension(749, 542));
        homeWelcomePnl.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        imageLbl.setForeground(new java.awt.Color(255, 255, 255));
        imageLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/memories.png"))); // NOI18N
        homeWelcomePnl.add(imageLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 750, 540));

        javax.swing.GroupLayout pnlHomeScreenLayout = new javax.swing.GroupLayout(pnlHomeScreen);
        pnlHomeScreen.setLayout(pnlHomeScreenLayout);
        pnlHomeScreenLayout.setHorizontalGroup(
            pnlHomeScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeScreenLayout.createSequentialGroup()
                .addComponent(pnlSideMenuBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(homeWelcomePnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(pnlMainTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlHomeScreenLayout.setVerticalGroup(
            pnlHomeScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomeScreenLayout.createSequentialGroup()
                .addComponent(pnlMainTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlHomeScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSideMenuBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(homeWelcomePnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pnlLogInScreen.setBackground(new java.awt.Color(72, 75, 50));
        pnlLogInScreen.setMaximumSize(new java.awt.Dimension(1000, 674));
        pnlLogInScreen.setMinimumSize(new java.awt.Dimension(1000, 674));
        pnlLogInScreen.setPreferredSize(new java.awt.Dimension(1000, 674));
        pnlLogInScreen.setSize(new java.awt.Dimension(1000, 674));

        pnlLoginDetails.setBackground(new java.awt.Color(255, 255, 255));
        pnlLoginDetails.setMaximumSize(new java.awt.Dimension(390, 591));
        pnlLoginDetails.setMinimumSize(new java.awt.Dimension(390, 591));
        pnlLoginDetails.setPreferredSize(new java.awt.Dimension(390, 591));
        pnlLoginDetails.setRequestFocusEnabled(false);
        pnlLoginDetails.setSize(new java.awt.Dimension(390, 591));

        lblLogin.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        lblLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogin.setText("Log In");

        lblUserName.setFont(new java.awt.Font("Kannada Sangam MN", 0, 18)); // NOI18N
        lblUserName.setText("User Name");

        txtFldUserName.setMaximumSize(new java.awt.Dimension(319, 50));
        txtFldUserName.setMinimumSize(new java.awt.Dimension(319, 50));
        txtFldUserName.setPreferredSize(new java.awt.Dimension(319, 50));
        txtFldUserName.setSize(new java.awt.Dimension(319, 50));

        lblPassword.setFont(new java.awt.Font("Kannada Sangam MN", 0, 18)); // NOI18N
        lblPassword.setText("Password");

        btnLogIn.setBackground(new java.awt.Color(51, 51, 51));
        btnLogIn.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        btnLogIn.setForeground(new java.awt.Color(255, 255, 255));
        btnLogIn.setText("Log in");
        btnLogIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogInActionPerformed(evt);
            }
        });

        passwordFld.setMaximumSize(new java.awt.Dimension(319, 50));
        passwordFld.setMinimumSize(new java.awt.Dimension(319, 50));
        passwordFld.setPreferredSize(new java.awt.Dimension(319, 50));
        passwordFld.setSize(new java.awt.Dimension(319, 50));

        javax.swing.GroupLayout pnlLoginDetailsLayout = new javax.swing.GroupLayout(pnlLoginDetails);
        pnlLoginDetails.setLayout(pnlLoginDetailsLayout);
        pnlLoginDetailsLayout.setHorizontalGroup(
            pnlLoginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginDetailsLayout.createSequentialGroup()
                .addGroup(pnlLoginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLoginDetailsLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(pnlLoginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblLogin)
                            .addComponent(lblErrorPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUserName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblErrorUserName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtFldUserName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passwordFld, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pnlLoginDetailsLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(btnLogIn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 45, Short.MAX_VALUE))
        );
        pnlLoginDetailsLayout.setVerticalGroup(
            pnlLoginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUserName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFldUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrorUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordFld, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblErrorPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogIn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblForImageInLoginSc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/0lBYs copy 2.jpeg"))); // NOI18N
        lblForImageInLoginSc.setMaximumSize(new java.awt.Dimension(406, 591));
        lblForImageInLoginSc.setMinimumSize(new java.awt.Dimension(406, 591));
        lblForImageInLoginSc.setPreferredSize(new java.awt.Dimension(406, 591));
        lblForImageInLoginSc.setSize(new java.awt.Dimension(406, 591));

        javax.swing.GroupLayout pnlLogInScreenLayout = new javax.swing.GroupLayout(pnlLogInScreen);
        pnlLogInScreen.setLayout(pnlLogInScreenLayout);
        pnlLogInScreenLayout.setHorizontalGroup(
            pnlLogInScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLogInScreenLayout.createSequentialGroup()
                .addContainerGap(99, Short.MAX_VALUE)
                .addComponent(lblForImageInLoginSc, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlLoginDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
        );
        pnlLogInScreenLayout.setVerticalGroup(
            pnlLogInScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLogInScreenLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addGroup(pnlLogInScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlLoginDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblForImageInLoginSc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        adminPnl.setBackground(new java.awt.Color(255, 255, 255));
        adminPnl.setMaximumSize(new java.awt.Dimension(1000, 680));
        adminPnl.setMinimumSize(new java.awt.Dimension(1000, 680));
        adminPnl.setPreferredSize(new java.awt.Dimension(1000, 680));
        adminPnl.setRequestFocusEnabled(false);
        adminPnl.setSize(new java.awt.Dimension(1000, 680));

        pnlForm.setBackground(new java.awt.Color(204, 208, 199));
        pnlForm.setMaximumSize(new java.awt.Dimension(1000, 360));
        pnlForm.setMinimumSize(new java.awt.Dimension(1000, 360));
        pnlForm.setPreferredSize(new java.awt.Dimension(1000, 360));
        pnlForm.setSize(new java.awt.Dimension(1000, 360));

        lblBabysitterId.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblBabysitterId.setText("Babysitter Id");
        lblBabysitterId.setMaximumSize(new java.awt.Dimension(156, 46));
        lblBabysitterId.setMinimumSize(new java.awt.Dimension(156, 46));
        lblBabysitterId.setPreferredSize(new java.awt.Dimension(156, 46));
        lblBabysitterId.setSize(new java.awt.Dimension(156, 46));

        txtFieldBabysitterId.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtFieldBabysitterId.setMaximumSize(new java.awt.Dimension(209, 39));
        txtFieldBabysitterId.setMinimumSize(new java.awt.Dimension(209, 39));
        txtFieldBabysitterId.setPreferredSize(new java.awt.Dimension(209, 39));
        txtFieldBabysitterId.setSize(new java.awt.Dimension(209, 39));

        lblName.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblName.setText("Name");
        lblName.setMaximumSize(new java.awt.Dimension(156, 46));
        lblName.setMinimumSize(new java.awt.Dimension(156, 46));
        lblName.setPreferredSize(new java.awt.Dimension(156, 46));
        lblName.setSize(new java.awt.Dimension(156, 46));

        lblAge.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblAge.setText("Age");
        lblAge.setMaximumSize(new java.awt.Dimension(156, 46));
        lblAge.setMinimumSize(new java.awt.Dimension(156, 46));
        lblAge.setPreferredSize(new java.awt.Dimension(156, 46));
        lblAge.setSize(new java.awt.Dimension(156, 46));

        lblExperience.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblExperience.setText("Experience");
        lblExperience.setMaximumSize(new java.awt.Dimension(156, 46));
        lblExperience.setMinimumSize(new java.awt.Dimension(156, 46));
        lblExperience.setPreferredSize(new java.awt.Dimension(156, 46));
        lblExperience.setSize(new java.awt.Dimension(156, 46));

        txtFieldName.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtFieldName.setMaximumSize(new java.awt.Dimension(209, 39));
        txtFieldName.setMinimumSize(new java.awt.Dimension(209, 39));
        txtFieldName.setPreferredSize(new java.awt.Dimension(209, 39));
        txtFieldName.setSize(new java.awt.Dimension(209, 39));

        txtFieldAge.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtFieldAge.setMaximumSize(new java.awt.Dimension(209, 39));
        txtFieldAge.setMinimumSize(new java.awt.Dimension(209, 39));
        txtFieldAge.setPreferredSize(new java.awt.Dimension(209, 39));
        txtFieldAge.setSize(new java.awt.Dimension(209, 39));

        txtFieldExperience.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtFieldExperience.setMaximumSize(new java.awt.Dimension(209, 39));
        txtFieldExperience.setMinimumSize(new java.awt.Dimension(209, 39));
        txtFieldExperience.setPreferredSize(new java.awt.Dimension(209, 39));
        txtFieldExperience.setSize(new java.awt.Dimension(209, 39));

        lblErrorMessageBsId.setMaximumSize(new java.awt.Dimension(232, 30));
        lblErrorMessageBsId.setMinimumSize(new java.awt.Dimension(232, 30));
        lblErrorMessageBsId.setPreferredSize(new java.awt.Dimension(232, 30));
        lblErrorMessageBsId.setSize(new java.awt.Dimension(232, 30));

        lblErrorMessageName.setMaximumSize(new java.awt.Dimension(236, 30));
        lblErrorMessageName.setMinimumSize(new java.awt.Dimension(236, 30));
        lblErrorMessageName.setPreferredSize(new java.awt.Dimension(236, 30));
        lblErrorMessageName.setSize(new java.awt.Dimension(236, 30));

        lblErrorMessageAge.setMaximumSize(new java.awt.Dimension(233, 30));
        lblErrorMessageAge.setMinimumSize(new java.awt.Dimension(233, 30));
        lblErrorMessageAge.setPreferredSize(new java.awt.Dimension(233, 30));
        lblErrorMessageAge.setSize(new java.awt.Dimension(233, 30));

        lblErrorMessageExperience.setMaximumSize(new java.awt.Dimension(214, 30));
        lblErrorMessageExperience.setMinimumSize(new java.awt.Dimension(214, 30));
        lblErrorMessageExperience.setPreferredSize(new java.awt.Dimension(214, 30));
        lblErrorMessageExperience.setSize(new java.awt.Dimension(214, 30));

        lblAddress.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblAddress.setText("Address");
        lblAddress.setMaximumSize(new java.awt.Dimension(156, 46));
        lblAddress.setMinimumSize(new java.awt.Dimension(156, 46));
        lblAddress.setPreferredSize(new java.awt.Dimension(156, 46));
        lblAddress.setSize(new java.awt.Dimension(156, 46));

        txtFieldAddress.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtFieldAddress.setMaximumSize(new java.awt.Dimension(209, 39));
        txtFieldAddress.setMinimumSize(new java.awt.Dimension(209, 39));
        txtFieldAddress.setPreferredSize(new java.awt.Dimension(209, 39));
        txtFieldAddress.setSize(new java.awt.Dimension(209, 39));

        lblContact.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblContact.setText("Contact Number");
        lblContact.setMaximumSize(new java.awt.Dimension(156, 46));
        lblContact.setMinimumSize(new java.awt.Dimension(156, 46));
        lblContact.setPreferredSize(new java.awt.Dimension(156, 46));
        lblContact.setSize(new java.awt.Dimension(156, 46));

        lblErrorMessageAddress.setMaximumSize(new java.awt.Dimension(232, 34));
        lblErrorMessageAddress.setMinimumSize(new java.awt.Dimension(232, 34));
        lblErrorMessageAddress.setPreferredSize(new java.awt.Dimension(232, 34));
        lblErrorMessageAddress.setSize(new java.awt.Dimension(232, 34));

        txtFieldContact.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtFieldContact.setMaximumSize(new java.awt.Dimension(209, 39));
        txtFieldContact.setMinimumSize(new java.awt.Dimension(209, 39));
        txtFieldContact.setPreferredSize(new java.awt.Dimension(209, 39));
        txtFieldContact.setSize(new java.awt.Dimension(209, 39));

        lblErrorMessageContact.setMaximumSize(new java.awt.Dimension(236, 34));
        lblErrorMessageContact.setMinimumSize(new java.awt.Dimension(236, 34));
        lblErrorMessageContact.setPreferredSize(new java.awt.Dimension(236, 34));
        lblErrorMessageContact.setSize(new java.awt.Dimension(236, 34));

        lblEmail.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblEmail.setText("Email");
        lblEmail.setMaximumSize(new java.awt.Dimension(156, 46));
        lblEmail.setMinimumSize(new java.awt.Dimension(156, 46));
        lblEmail.setPreferredSize(new java.awt.Dimension(156, 46));
        lblEmail.setSize(new java.awt.Dimension(156, 46));

        txtFieldEmail.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtFieldEmail.setMaximumSize(new java.awt.Dimension(209, 39));
        txtFieldEmail.setMinimumSize(new java.awt.Dimension(209, 39));
        txtFieldEmail.setPreferredSize(new java.awt.Dimension(209, 39));
        txtFieldEmail.setSize(new java.awt.Dimension(209, 39));

        lblErrorMessageEmail.setMaximumSize(new java.awt.Dimension(349, 34));
        lblErrorMessageEmail.setMinimumSize(new java.awt.Dimension(349, 34));
        lblErrorMessageEmail.setPreferredSize(new java.awt.Dimension(349, 34));
        lblErrorMessageEmail.setSize(new java.awt.Dimension(349, 34));

        addBtn.setBackground(new java.awt.Color(102, 102, 102));
        addBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setText("Add");
        addBtn.setMaximumSize(new java.awt.Dimension(78, 43));
        addBtn.setMinimumSize(new java.awt.Dimension(78, 43));
        addBtn.setPreferredSize(new java.awt.Dimension(78, 43));
        addBtn.setSize(new java.awt.Dimension(78, 43));
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(102, 102, 102));
        updateBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setText("Update");
        updateBtn.setMaximumSize(new java.awt.Dimension(78, 43));
        updateBtn.setMinimumSize(new java.awt.Dimension(78, 43));
        updateBtn.setPreferredSize(new java.awt.Dimension(78, 43));
        updateBtn.setSize(new java.awt.Dimension(78, 43));
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(102, 102, 102));
        deleteBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setText("Delete");
        deleteBtn.setMaximumSize(new java.awt.Dimension(78, 43));
        deleteBtn.setMinimumSize(new java.awt.Dimension(78, 43));
        deleteBtn.setPreferredSize(new java.awt.Dimension(78, 43));
        deleteBtn.setSize(new java.awt.Dimension(78, 43));
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        mainScBtn.setBackground(new java.awt.Color(51, 51, 51));
        mainScBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        mainScBtn.setForeground(new java.awt.Color(255, 255, 255));
        mainScBtn.setText("Home");
        mainScBtn.setMaximumSize(new java.awt.Dimension(78, 43));
        mainScBtn.setMinimumSize(new java.awt.Dimension(78, 43));
        mainScBtn.setPreferredSize(new java.awt.Dimension(78, 43));
        mainScBtn.setSize(new java.awt.Dimension(78, 43));
        mainScBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainScBtnActionPerformed(evt);
            }
        });

        pnlSearchSort.setBackground(new java.awt.Color(204, 208, 199));
        pnlSearchSort.setMaximumSize(new java.awt.Dimension(320, 65));
        pnlSearchSort.setMinimumSize(new java.awt.Dimension(320, 65));
        pnlSearchSort.setPreferredSize(new java.awt.Dimension(320, 65));
        pnlSearchSort.setSize(new java.awt.Dimension(320, 65));

        btnSearch.setMaximumSize(new java.awt.Dimension(44, 31));
        btnSearch.setMinimumSize(new java.awt.Dimension(44, 31));
        btnSearch.setPreferredSize(new java.awt.Dimension(44, 31));
        btnSearch.setSize(new java.awt.Dimension(44, 31));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtFldSearch.setText("Search...");
        txtFldSearch.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtFldSearch.setMaximumSize(new java.awt.Dimension(205, 31));
        txtFldSearch.setMinimumSize(new java.awt.Dimension(205, 31));
        txtFldSearch.setPreferredSize(new java.awt.Dimension(205, 31));
        txtFldSearch.setSize(new java.awt.Dimension(205, 31));
        txtFldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFldSearchKeyTyped(evt);
            }
        });

        cbSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sort by", "Id(Ascending)", "Id(Descending)", "Name(Ascending)", "Name(Descending)", "Experience(Descending)", "Experience(Ascending)", " " }));
        cbSort.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cbSort.setMaximumSize(new java.awt.Dimension(148, 31));
        cbSort.setMinimumSize(new java.awt.Dimension(148, 31));
        cbSort.setPreferredSize(new java.awt.Dimension(148, 31));
        cbSort.setSize(new java.awt.Dimension(148, 31));
        cbSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSearchSortLayout = new javax.swing.GroupLayout(pnlSearchSort);
        pnlSearchSort.setLayout(pnlSearchSortLayout);
        pnlSearchSortLayout.setHorizontalGroup(
            pnlSearchSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchSortLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbSort, 0, 158, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlSearchSortLayout.setVerticalGroup(
            pnlSearchSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchSortLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlSearchSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbSort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFldSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlFormLayout = new javax.swing.GroupLayout(pnlForm);
        pnlForm.setLayout(pnlFormLayout);
        pnlFormLayout.setHorizontalGroup(
            pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addComponent(pnlSearchSort, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mainScBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFieldBabysitterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBabysitterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblErrorMessageBsId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFieldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblErrorMessageAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblErrorMessageContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblErrorMessageName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFieldContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlFormLayout.createSequentialGroup()
                                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblErrorMessageAge, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(19, 19, 19)
                                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblExperience, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFieldExperience, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblErrorMessageExperience, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lblErrorMessageEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlFormLayout.setVerticalGroup(
            pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBabysitterId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblExperience, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldBabysitterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFieldExperience, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblErrorMessageBsId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrorMessageName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrorMessageAge, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrorMessageExperience, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtFieldAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtFieldContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblErrorMessageAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrorMessageContact, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrorMessageEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlSearchSort, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mainScBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(72, 72, 72))
        );

        tblPnl.setBackground(new java.awt.Color(204, 204, 204));

        tblToDisplayBabysitterInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Babysitter Id", "Name", "Age", "Contact", "Experience", "Address", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblToDisplayBabysitterInfo.setMaximumSize(new java.awt.Dimension(1000, 330));
        tblToDisplayBabysitterInfo.setMinimumSize(new java.awt.Dimension(1000, 330));
        tblToDisplayBabysitterInfo.setPreferredSize(new java.awt.Dimension(1000, 330));
        tblToDisplayBabysitterInfo.setShowGrid(true);
        tblToDisplayBabysitterInfo.setSize(new java.awt.Dimension(1000, 330));
        tblToDisplayBabysitterInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblToDisplayBabysitterInfoMouseClicked(evt);
            }
        });
        spTblBabysitter.setViewportView(tblToDisplayBabysitterInfo);
        if (tblToDisplayBabysitterInfo.getColumnModel().getColumnCount() > 0) {
            tblToDisplayBabysitterInfo.getColumnModel().getColumn(0).setResizable(false);
            tblToDisplayBabysitterInfo.getColumnModel().getColumn(1).setResizable(false);
            tblToDisplayBabysitterInfo.getColumnModel().getColumn(2).setResizable(false);
            tblToDisplayBabysitterInfo.getColumnModel().getColumn(3).setResizable(false);
            tblToDisplayBabysitterInfo.getColumnModel().getColumn(4).setResizable(false);
            tblToDisplayBabysitterInfo.getColumnModel().getColumn(5).setResizable(false);
            tblToDisplayBabysitterInfo.getColumnModel().getColumn(6).setResizable(false);
        }

        javax.swing.GroupLayout tblPnlLayout = new javax.swing.GroupLayout(tblPnl);
        tblPnl.setLayout(tblPnlLayout);
        tblPnlLayout.setHorizontalGroup(
            tblPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spTblBabysitter)
        );
        tblPnlLayout.setVerticalGroup(
            tblPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblPnlLayout.createSequentialGroup()
                .addComponent(spTblBabysitter, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout adminPnlLayout = new javax.swing.GroupLayout(adminPnl);
        adminPnl.setLayout(adminPnlLayout);
        adminPnlLayout.setHorizontalGroup(
            adminPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPnlLayout.createSequentialGroup()
                .addGroup(adminPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tblPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        adminPnlLayout.setVerticalGroup(
            adminPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminPnlLayout.createSequentialGroup()
                .addComponent(pnlForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tblPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlAboutUs.setBackground(new java.awt.Color(115, 150, 145));
        pnlAboutUs.setMaximumSize(new java.awt.Dimension(1000, 647));
        pnlAboutUs.setMinimumSize(new java.awt.Dimension(1000, 647));
        pnlAboutUs.setPreferredSize(new java.awt.Dimension(1000, 647));
        pnlAboutUs.setSize(new java.awt.Dimension(1000, 647));
        pnlAboutUs.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        homeScreenBtn.setBackground(new java.awt.Color(0, 0, 0));
        homeScreenBtn.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        homeScreenBtn.setForeground(new java.awt.Color(255, 255, 255));
        homeScreenBtn.setText("Home");
        homeScreenBtn.setBorder(new javax.swing.border.MatteBorder(null));
        homeScreenBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeScreenBtnActionPerformed(evt);
            }
        });
        pnlAboutUs.add(homeScreenBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 10, 100, 40));

        aboutUsLbl.setFont(new java.awt.Font("Kohinoor Telugu", 1, 36)); // NOI18N
        aboutUsLbl.setText("About Us");
        pnlAboutUs.add(aboutUsLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 180, 40));

        aboutUsDesLbl4.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        aboutUsDesLbl4.setText("our user-friendly platform helps administrators organize babysitter ");
        pnlAboutUs.add(aboutUsDesLbl4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 540, 20));

        aboutUsDesLbl3.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        aboutUsDesLbl3.setText("With features like efficient sorting, filtering, and search capabilities, ");
        pnlAboutUs.add(aboutUsDesLbl3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 97, 560, -1));

        aboutUsDesLbl2.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        aboutUsDesLbl2.setText("simplify and streamline the management of babysitter information.");
        pnlAboutUs.add(aboutUsDesLbl2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 540, 30));

        aboutUsDesLbl1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        aboutUsDesLbl1.setText("The Babysitter Management System is designed to");
        pnlAboutUs.add(aboutUsDesLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 462, -1));

        aboutUsDesLbl5.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        aboutUsDesLbl5.setText("records, including experience, contact details, experience.");
        pnlAboutUs.add(aboutUsDesLbl5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 530, 20));

        whatWeDoLbl.setFont(new java.awt.Font("Kohinoor Telugu", 1, 36)); // NOI18N
        whatWeDoLbl.setText("What we do");
        pnlAboutUs.add(whatWeDoLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 240, 30));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel1.setText("Our system empowers admins to:");
        pnlAboutUs.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 400, -1));

        imageLblCeo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/IMG_6818.JPG"))); // NOI18N
        imageLblCeo.setMaximumSize(new java.awt.Dimension(200, 200));
        imageLblCeo.setMinimumSize(new java.awt.Dimension(200, 200));
        imageLblCeo.setPreferredSize(new java.awt.Dimension(200, 200));
        pnlAboutUs.add(imageLblCeo, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 10, 210, 280));

        lblDesc.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblDesc.setText("1. Organize and update Babysitter Information:");
        pnlAboutUs.add(lblDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 390, -1));

        lblDes1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblDes1.setText("Keep track of babysitters' personal details");
        pnlAboutUs.add(lblDes1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 410, 30));

        lblDes2.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblDes2.setText("2. Search and Filter with ease: Quickly find babysitters by name, ID");
        pnlAboutUs.add(lblDes2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 297, 560, 30));

        lblDes3.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblDes3.setText("or experience using robust search and sorting features.");
        pnlAboutUs.add(lblDes3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 327, 510, -1));

        lblDes4.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblDes4.setText("3. Maintain Accurate Records: Eliminate errors with built-in data validation tools");
        pnlAboutUs.add(lblDes4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 660, 30));

        visionLbl.setFont(new java.awt.Font("Kohinoor Telugu", 1, 36)); // NOI18N
        visionLbl.setText("Our vision");
        pnlAboutUs.add(visionLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 250, 40));

        lblVision1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblVision1.setText("Our vision is to support admins in creating a streamlined, user-friendly");
        pnlAboutUs.add(lblVision1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, 580, -1));

        lblVision2.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblVision2.setText("environment where babysitter data is accessible, manageable and");
        pnlAboutUs.add(lblVision2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 453, 560, 20));

        lblVision3.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblVision3.setText("well-organized. We aim to enhance the efficiency of childcare services");
        pnlAboutUs.add(lblVision3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 580, 30));

        lblVision4.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblVision4.setText("through smart and relidable technology.");
        pnlAboutUs.add(lblVision4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, 450, -1));

        ceoNameLbl.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        ceoNameLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ceoNameLbl.setText("Ms. Aditi Verma (CEO)");
        pnlAboutUs.add(ceoNameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 300, 210, 20));

        memoryLbl.setFont(new java.awt.Font("Helvetica Neue", 1, 48)); // NOI18N
        memoryLbl.setText("M");
        pnlAboutUs.add(memoryLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 380, 60, 40));

        memoryLbl1.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        memoryLbl1.setText("emories");
        pnlAboutUs.add(memoryLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 390, 150, 20));

        lblImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/babysitting.jpg"))); // NOI18N
        pnlAboutUs.add(lblImage1, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 440, 140, 140));

        lblImage2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/IMG_6059.JPG"))); // NOI18N
        pnlAboutUs.add(lblImage2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 430, 140, 160));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1000, 647));
        setSize(new java.awt.Dimension(1000, 647));

        pnlLoadingScreen.setBackground(new java.awt.Color(255, 255, 255));
        pnlLoadingScreen.setMaximumSize(new java.awt.Dimension(1000, 647));
        pnlLoadingScreen.setMinimumSize(new java.awt.Dimension(1000, 647));
        pnlLoadingScreen.setPreferredSize(new java.awt.Dimension(1000, 647));
        pnlLoadingScreen.setSize(new java.awt.Dimension(1000, 647));
        pnlLoadingScreen.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pgBarSplashSc.setBackground(new java.awt.Color(204, 204, 204));
        pgBarSplashSc.setForeground(new java.awt.Color(34, 125, 143));
        pnlLoadingScreen.add(pgBarSplashSc, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 590, 900, 40));

        loadingLbl.setFont(new java.awt.Font("Kannada MN", 1, 18)); // NOI18N
        loadingLbl.setForeground(new java.awt.Color(255, 255, 255));
        loadingLbl.setText("Loading.........");
        pnlLoadingScreen.add(loadingLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 570, 180, 20));

        loadingValueLbl.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        loadingValueLbl.setForeground(new java.awt.Color(255, 255, 255));
        loadingValueLbl.setText("0%");
        pnlLoadingScreen.add(loadingValueLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 570, 50, 20));

        loadingImageLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/IMG_6471.JPG"))); // NOI18N
        pnlLoadingScreen.add(loadingImageLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 650));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadLoginScreen() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(pnlLogInScreen, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pnlLogInScreen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

    }

    /**
     * Initializes the layout of the application by setting up the CardLayout
     * Adding panels for different screen.
     */
    private void initializeLayout() {

        cardLayout = new java.awt.CardLayout();
        getContentPane().setLayout(cardLayout);

        // Add panels with unique identifiers
        getContentPane().add(pnlLoadingScreen, "LoadingScreen");
        getContentPane().add(pnlLogInScreen, "LoginScreen");
        getContentPane().add(pnlHomeScreen, "HomeScreen");
        getContentPane().add(adminPnl, "ManageProfileScreen");
        getContentPane().add(pnlAboutUs, "AboutUsScreen");

        // Start with the loading screen
        cardLayout.show(getContentPane(), "LoadingScreen");
    }

    /**
     * Switches the application screen to the specified screen name.
     *
     * @param screenName The name of the screen to display.
     */
    private void loadScreen(String screenName) {
        cardLayout.show(getContentPane(), screenName);
    }

    /**
     * Initializes the application's data, including the babysitter list and
     * table. Populates the babysitter list with sample data for demonstration
     * purposes.
     */
    private void initializeData() {
        babysitterList.add(new BabysitterModel(23455, "Garima", (short) 26, "9854653250", 3, "Kamalpokhari", "garima@gmail.com"));
        babysitterList.add(new BabysitterModel(23451, "Sunaina", (short) 24, "9875643210", 4, "Hattiban", "sunaina@gmail.com"));
        babysitterList.add(new BabysitterModel(23452, "Bidhya", (short) 25, "9807654231", 5, "Baneshwor", "bidhya@gmail.com"));
        loadDetailsToTable(babysitterList);

    }

    /**
     * Simulates the loading progress using a SwingWorker thread. Updates a
     * progress bar incrementally and switches to the login screen upon
     * completion.
     */
    private void startProgress() {

        javax.swing.SwingWorker<Void, Integer> worker = new javax.swing.SwingWorker<>() {
            @Override
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 100; i++) {
                    Thread.sleep(40);
                    publish(i);
                }
                return null;
            }

            @Override
            protected void process(java.util.List<Integer> chunks) {
                int progress = chunks.get(chunks.size() - 1);
                pgBarSplashSc.setValue(progress);
                loadingValueLbl.setText(progress + "%");
            }

            @Override
            protected void done() {
                loadScreen("LoginScreen"); // Switch to login screen
            }
        };
        worker.execute(); // Start the worker thread
    }

    /**
     * Displays a confirmation dialog for logout Clears fields and loads the
     * login
     *
     * @param evt The event triggered when logout button is clicked
     */

    private void logOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutBtnActionPerformed
        int choice = JOptionPane.showConfirmDialog(
                this,
                "Are you sure you want to log out?",
                "Confirm Logout",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE
        );

        if (choice == JOptionPane.YES_OPTION) {
            passwordFld.setText("");
            txtFldUserName.setText("");
            loadScreen("LoginScreen");
        }
    }//GEN-LAST:event_logOutBtnActionPerformed
    /**
     * Load babysitter form Screen
     *
     * @param evt The event triggered when Manage profile button is clicked
     */
    private void btnGoToFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoToFormActionPerformed
        loadScreen("ManageProfileScreen"); //Load form screen 
    }//GEN-LAST:event_btnGoToFormActionPerformed

    /**
     * login admin to the system by checking whether the entered username and
     * password are correct or not
     *
     * @param evt The event triggered by login button
     */

    private void btnLogInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogInActionPerformed
        //Get data from user name and password textfiled
        String userName = txtFldUserName.getText();
        String password = new String(passwordFld.getPassword());

        boolean hasError = false;

        //check if user name
        if (userName.isEmpty()) {
            lblErrorUserName.setText("*Please enter user Name");//Display message to inform user name is empty
            lblErrorUserName.setForeground(errorColor);
            txtFldUserName.setBorder(createLineBorder(errorColor));
            hasError = true;
            //check if user name is incorrect
        } else if (!userName.equals("Admin")) {
            lblErrorUserName.setText("*Please enter correct user Name");
            lblErrorUserName.setForeground(errorColor);
            txtFldUserName.setBorder(createLineBorder(errorColor));

            hasError = true;

        } else {
            lblErrorUserName.setText(" ");//clear text from Name error label
            txtFldUserName.setBorder(createLineBorder(successColor));

        }
        //check if password filed is empty 
        if (password.isEmpty()) {
            lblErrorPassword.setText("*Please enter password");//Display message to inform password is empty
            lblErrorPassword.setForeground(errorColor);
            passwordFld.setBorder(createLineBorder(errorColor));
            hasError = true;
            //Check if password is incorrect
        } else if (!password.equals("admin")) {
            lblErrorPassword.setText("*Please enter correct password");
            lblErrorPassword.setForeground(errorColor);
            passwordFld.setBorder(createLineBorder(errorColor));
            hasError = true;
        } else {
            lblErrorPassword.setText(" ");//clear text from password error label
            passwordFld.setBorder(createLineBorder(successColor));

        }
        //load Home Screen if no error occur
        if (!hasError) {
            loadScreen("HomeScreen");
        }
    }//GEN-LAST:event_btnLogInActionPerformed
    /**
     * Handles all the validation while adding babysitters in babysitter list
     *
     * @param evt The event triggered by add button
     */
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        boolean isValid = true;

        // Validate Babysitter ID
        isValid &= validateField(txtFieldBabysitterId, lblErrorMessageBsId, "Must contain 5 digit number only.",
                errorColor, successColor, ValidationUtil.isValidBabysitterId(txtFieldBabysitterId.getText())
        );

        // Validate Name
        isValid &= validateField(txtFieldName, lblErrorMessageName, "Must contain only alphabets.",
                errorColor, successColor, ValidationUtil.isValidName(txtFieldName.getText())
        );

        // Validate Contact
        isValid &= validateField(
                txtFieldContact, lblErrorMessageContact, "Start with 98 and have 10 digits.",
                errorColor, successColor, ValidationUtil.isValidContact(txtFieldContact.getText())
        );
        // Validate address
        isValid &= validateField(
                txtFieldAddress, lblErrorMessageAddress, "Must contain alphabets and comma only.",
                errorColor, successColor, ValidationUtil.isValidAddress(txtFieldAddress.getText())
        );
        // Validate Age
        try {
            short age = Short.parseShort(txtFieldAge.getText().trim());
            isValid &= validateField(
                    txtFieldAge, lblErrorMessageAge, "Must be between 21 and 34.",
                    errorColor, successColor, ValidationUtil.isValidAge(age)
            );
        } catch (NumberFormatException e) {
            validateField(txtFieldAge, lblErrorMessageAge, "Must be a valid number.", errorColor, successColor, false);
            isValid = false;
        }
        //validate experience
        try {
            int experience = Integer.parseInt(txtFieldExperience.getText().trim());
            isValid &= validateField(
                    txtFieldExperience, lblErrorMessageExperience, "Must be between 1 and 20",
                    errorColor, successColor, ValidationUtil.isValidExperience(experience)
            );
        } catch (NumberFormatException e) {
            validateField(txtFieldExperience, lblErrorMessageExperience, "Must be a valid number.", errorColor, successColor, false);
            isValid = false;
        }
        //Validate email
        isValid &= validateField(
                txtFieldEmail, lblErrorMessageEmail, "Enter a valid email format: example@domain.com.",
                errorColor, successColor, ValidationUtil.isVaildEmail(txtFieldEmail.getText())
        );
        //if all the validate are true then create new instance of babysitter
        if (isValid) {
            // Create a BabysitterModel instance
            BabysitterModel newBabysitter = new BabysitterModel(
                    Integer.parseInt(txtFieldBabysitterId.getText().trim()),
                    txtFieldName.getText().trim(),
                    Short.parseShort(txtFieldAge.getText().trim()),
                    txtFieldContact.getText().trim(),
                    Integer.parseInt(txtFieldExperience.getText().trim()),
                    txtFieldAddress.getText().trim(),
                    txtFieldEmail.getText().trim()
            );

            // Check for duplicate Babysitter Id
            if (checkDuplicateBabysitter(newBabysitter)) {
                txtFieldBabysitterId.setBorder(createLineBorder(errorColor));
                showMessageBox("Baby sitter ID already exists.", "Duplicate Entry", JOptionPane.WARNING_MESSAGE);
            } else {
                // Add the babysitter if no duplicate is found
                babysitterList.add(newBabysitter);
                clearBabysitterForm();
                loadDetailsToTable(babysitterList);

                showMessageBox("Babysitter added successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
        }

    }//GEN-LAST:event_addBtnActionPerformed
    /**
     * Handles the action event when the update button is clicked. It validates
     * the input fields (name, contact, address, age, experience, and email),
     * checks if a row is selected in the table, and if valid, updates the
     * selected babysitter’s information in the list and the table.
     *
     * @param evt the action event triggered by the update button
     */
    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed

        boolean isValid = true;
        int selectedRow = tblToDisplayBabysitterInfo.getSelectedRow();
        //Check if no row is selected
        if (selectedRow == -1) {
            showMessageBox("Select a row to update data from a table", "Row not selected", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Validate Name
        isValid &= validateField(txtFieldName, lblErrorMessageName, "Must contain only alphabets",
                errorColor, successColor, ValidationUtil.isValidName(txtFieldName.getText())
        );

        // Validate Contact
        isValid &= validateField(
                txtFieldContact, lblErrorMessageContact, "Start with 98 and have 10 digits",
                errorColor, successColor, ValidationUtil.isValidContact(txtFieldContact.getText())
        );
        // Validate address
        isValid &= validateField(
                txtFieldAddress, lblErrorMessageAddress, "Contain only alphabets and comma",
                errorColor, successColor, ValidationUtil.isValidAddress(txtFieldAddress.getText())
        );
        // Validate Age
        try {
            short age = Short.parseShort(txtFieldAge.getText().trim());
            isValid &= validateField(
                    txtFieldAge, lblErrorMessageAge, "Must be between 21 and 45",
                    errorColor, successColor, ValidationUtil.isValidAge(age)
            );
        } catch (NumberFormatException e) {
            validateField(txtFieldAge, lblErrorMessageAge, "Must be a valid number", errorColor, successColor, false);
            isValid = false;
        }
        //validate experience
        try {
            int experience = Integer.parseInt(txtFieldExperience.getText().trim());
            isValid &= validateField(
                    txtFieldExperience, lblErrorMessageExperience, "Must be between 1 and 20",
                    errorColor, successColor, ValidationUtil.isValidExperience(experience)
            );
        } catch (NumberFormatException e) {
            validateField(txtFieldExperience, lblErrorMessageExperience, "Must be a valid number", errorColor, successColor, false);
            isValid = false;
        }
        //Validate email
        isValid &= validateField(
                txtFieldEmail, lblErrorMessageEmail, "Enter a valid email in the format: example@domain.com",
                errorColor, successColor, ValidationUtil.isVaildEmail(txtFieldEmail.getText())
        );
        try {
            if (isValid) {
                BabysitterModel udatedBabysitter = new BabysitterModel(
                        Integer.parseInt(txtFieldBabysitterId.getText().trim()),
                        txtFieldName.getText().trim(),
                        Short.parseShort(txtFieldAge.getText().trim()),
                        txtFieldContact.getText().trim(),
                        Integer.parseInt(txtFieldExperience.getText().trim()),
                        txtFieldAddress.getText().trim(),
                        txtFieldEmail.getText().trim());
                // Update the babysitter in the list based on the selected row
                babysitterList.set(selectedRow, udatedBabysitter);
                clearBabysitterForm();
                // Refresh the table
                loadDetailsToTable(babysitterList);
                showMessageBox("Babysitter updated successfully", "Updated", JOptionPane.INFORMATION_MESSAGE);

            }
        } catch (IndexOutOfBoundsException e) {
            showMessageBox("Invalid row is selected.", "Invalid row", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_updateBtnActionPerformed
    /**
     * Handles the action event when the delete button is clicked. It performs
     * the following tasks: Makes the babysitter ID field editable. Checks if a
     * row is selected in the table. If no row is selected, it displays a
     * warning message. Retrieves the selected babysitter from the list and
     * removes it from both the list and the table model. Clears the babysitter
     * form fields. Displays a success message when the deletion is successful.
     * Catches any potential IndexOutOfBoundsException in case of invalid row
     * selection and shows an error message.
     *
     * @param evt the action event triggered by the delete button
     */
    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed

        boolean isValid = true;
        try {
            int selectedRow = tblToDisplayBabysitterInfo.getSelectedRow();
            //Check if no row is selected
            if (selectedRow == -1) {
                showMessageBox("Select a row to delete data from table", "Row not selected", JOptionPane.WARNING_MESSAGE);
                return;// Stop execution if no row is selected
            }
            DefaultTableModel model = (DefaultTableModel) tblToDisplayBabysitterInfo.getModel();
            BabysitterModel selectedBabysitter = babysitterList.get(selectedRow);
            babysitterList.remove(selectedBabysitter);
            model.removeRow(selectedRow);
            clearBabysitterForm();
            showMessageBox("Babysitter details deleted successfully.", "Deleted", JOptionPane.INFORMATION_MESSAGE);

        } catch (IndexOutOfBoundsException e) {
            showMessageBox("Invalid row selected.", "Invalid row", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_deleteBtnActionPerformed
    /**
     * Load Home Page
     *
     * @param evt Action event triggered when Home button is clicked
     *
     */
    private void mainScBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainScBtnActionPerformed
        loadScreen("HomeScreen");
    }//GEN-LAST:event_mainScBtnActionPerformed
    /**
     * Handles the mouse click event on the table to load the selected
     * babysitter's details into the form fields. It retrieves the selected row,
     * checks if the row is valid, and populates the form with the corresponding
     * babysitter's data. If no valid row is selected, an error message is
     * shown.
     *
     * @param evt the mouse click event
     */
    private void tblToDisplayBabysitterInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblToDisplayBabysitterInfoMouseClicked
        try {
            int selectedRow = tblToDisplayBabysitterInfo.getSelectedRow();//Get selected row index
            //Check if the valid row is selected
            if (!babysitterList.isEmpty() && selectedRow != -1) {
                BabysitterModel babysitterInfo = babysitterList.get(selectedRow);
                txtFieldBabysitterId.setText(Integer.toString(babysitterInfo.getBabysitterId()));
                txtFieldBabysitterId.setEditable(false);
                txtFieldName.setText(babysitterInfo.getName());
                txtFieldAge.setText(Short.toString(babysitterInfo.getAge()));
                txtFieldContact.setText(babysitterInfo.getContact());
                txtFieldExperience.setText(Integer.toString(babysitterInfo.getExperience()));
                txtFieldAddress.setText(babysitterInfo.getAddress());
                txtFieldEmail.setText(babysitterInfo.getEmail());

            }

        } catch (IndexOutOfBoundsException e) {

            showMessageBox("Invalid row selected.", "Invalid row", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tblToDisplayBabysitterInfoMouseClicked
    /**
     * Handles search by ID or name based on user input.
     *
     * @param evt The event triggered when Search button is clicked
     */
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        search = new BinarySearch();
        String searchValue = txtFldSearch.getText().trim();

        if (searchValue.isEmpty()) {
            showMessageBox("Please enter a value to Search.", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        List<BabysitterModel> searchResult = search.search(searchValue, babysitterList);
        if (searchResult.isEmpty()) {
            showMessageBox("No matches found.", "Search Result", JOptionPane.INFORMATION_MESSAGE);
        } else {
            LinkedList<BabysitterModel> searchBy = new LinkedList<>(searchResult);
            loadDetailsToTable(searchBy);
        }


    }//GEN-LAST:event_btnSearchActionPerformed
    /**
     * Handles the action event when options in combo box are selected
     *
     * @param evt the ActionEvent triggered by the combo box selection
     */
    private void cbSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSortActionPerformed

        String sortBy = ((String) cbSort.getSelectedItem()).trim();
        if (sortBy.equalsIgnoreCase("Experience(Ascending)")) {
            sorting.insertionSortByExperience(babysitterList, true);

        } else if (sortBy.equalsIgnoreCase("Experience(Descending)")) {
            sorting.insertionSortByExperience(babysitterList, false);

        } else if (sortBy.equalsIgnoreCase("Name(Ascending)")) {

            sorting.selectionSortByName(babysitterList, true);

        } else if (sortBy.equalsIgnoreCase("Name(Descending)")) {

            sorting.selectionSortByName(babysitterList, false);

        } else if (sortBy.equalsIgnoreCase("Id(Ascending)")) {
            sorting.mergeSortById(babysitterList, true);

        } else if (sortBy.equalsIgnoreCase("Id(Descending)")) {
            sorting.mergeSortById(babysitterList, false);
        }
        loadDetailsToTable(babysitterList);

    }//GEN-LAST:event_cbSortActionPerformed
    /**
     * Clear the text 'Search...'from search bar while search a babysitter
     *
     * @param evt the Action event triggered while search item is typed
     */
    private void txtFldSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFldSearchKeyTyped
        if (txtFldSearch.getText().equals("Search...")) {
            txtFldSearch.setText("");
        }
    }//GEN-LAST:event_txtFldSearchKeyTyped
    /**
     * load the About us screen
     *
     * @param evt the Action event triggered by button aboutUsBtn in main screen
     */
    private void aboutUsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutUsBtnActionPerformed
        loadScreen("AboutUsScreen");
    }//GEN-LAST:event_aboutUsBtnActionPerformed
    /**
     * load the mainScreen
     *
     * @param evt the Action event triggered by button in about us screen
     */
    private void homeScreenBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeScreenBtnActionPerformed
        loadScreen("HomeScreen");
    }//GEN-LAST:event_homeScreenBtnActionPerformed

    /**
     * Populates the JTable with the current list of Babysitter records. Clears
     * existing rows in the table model before adding new data.
     */
    private void loadDetailsToTable(LinkedList<BabysitterModel> babysitterList) {
        DefaultTableModel model = (DefaultTableModel) tblToDisplayBabysitterInfo.getModel();

        // Clear existing rows if needed
        model.setRowCount(0);

        //forEach loop to iterate over the LinkedList
        babysitterList.forEach(babysitter
                -> model.addRow(new Object[]{
            babysitter.getBabysitterId(),
            babysitter.getName(),
            babysitter.getAge(),
            babysitter.getContact(),
            babysitter.getExperience(),
            babysitter.getAddress(),
            babysitter.getEmail()
        }));
    }

    /**
     * Display a message box with message tile and type of message
     *
     * @param message message to display
     * @param title the title for message
     * @param messageType the type of message i.e. information message error
     * message warning or confirmation message
     */
    private void showMessageBox(String message, String title, int messageType) {
        JOptionPane.showMessageDialog(this, message, title, messageType);
    }

    /**
     * Validates a single input field based on specific criteria and updates its
     * visual state.
     *
     * @param textField the JTextField to validate
     * @param errorLbl the JLabel to show error messages
     * @param errorMsg the error message to display for invalid input
     * @param errorColor the color for error borders and message for error
     * @param successColor the color for successful validation borders
     * @param isValidFormat whether the input satisfies the field-specific
     * validation criteria
     * @return true if the field passes validation, false otherwise
     */
    private boolean validateField(JTextField textField, JLabel errorLbl, String errorMsg, Color errorColor, Color successColor, boolean isValidFormat) {
        if (ValidationUtil.isNullOrEmpty(textField.getText())) {
            textField.setBorder(createLineBorder(errorColor));
            errorLbl.setText("Field cannot be empty!");
            errorLbl.setVisible(true);
            return false;
        } else if (!isValidFormat) {
            textField.setBorder(createLineBorder(errorColor));
            errorLbl.setText(errorMsg);
            errorLbl.setVisible(true);
            return false;
        } else {
            textField.setBorder(createLineBorder(successColor));
            errorLbl.setVisible(false);
            return true;
        }
    }

    /**
     * Creates a custom TitledBorder with specified color and title.
     *
     * @param color the color for the border and title
     *
     * @return a LineBorder instance
     */
    private javax.swing.border.Border createLineBorder(Color color) {
        return javax.swing.BorderFactory.createLineBorder(color, 2);
    }

    /**
     * Clears all input fields in the babysitter form. Resets each field's value
     * to an empty string.
     */
    private void clearBabysitterForm() {
        txtFieldBabysitterId.setText("");
        txtFieldName.setText("");
        txtFieldAge.setText("");
        txtFieldContact.setText("");
        txtFieldAddress.setText("");
        txtFieldEmail.setText("");
        txtFieldExperience.setText("");
        txtFieldBabysitterId.setEditable(true);
    }

    /**
     * Checks whether a babysitter with the same babysitter ID already exists in
     * the babysitter list.
     *
     * @param babysitter the BabysitterModel object to check for duplicates
     * @return true if a duplicate is found, false otherwise
     */
    private boolean checkDuplicateBabysitter(BabysitterModel babysitter) {
        return babysitterList.stream()
                .anyMatch(existingBabysitter
                        -> existingBabysitter.getBabysitterId() == babysitter.getBabysitterId());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BabysitterManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BabysitterManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BabysitterManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BabysitterManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BabysitterManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutUsBtn;
    private javax.swing.JLabel aboutUsDesLbl1;
    private javax.swing.JLabel aboutUsDesLbl2;
    private javax.swing.JLabel aboutUsDesLbl3;
    private javax.swing.JLabel aboutUsDesLbl4;
    private javax.swing.JLabel aboutUsDesLbl5;
    private javax.swing.JLabel aboutUsLbl;
    private javax.swing.JButton addBtn;
    private javax.swing.JPanel adminPnl;
    private javax.swing.JButton btnGoToForm;
    private javax.swing.JButton btnLogIn;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cbSort;
    private javax.swing.JLabel ceoNameLbl;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton homeScreenBtn;
    private javax.swing.JPanel homeWelcomePnl;
    private javax.swing.JLabel imageLbl;
    private javax.swing.JLabel imageLblCeo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAdmin;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblBabysitterId;
    private javax.swing.JLabel lblContact;
    private javax.swing.JLabel lblDes1;
    private javax.swing.JLabel lblDes2;
    private javax.swing.JLabel lblDes3;
    private javax.swing.JLabel lblDes4;
    private javax.swing.JLabel lblDesc;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblErrorMessageAddress;
    private javax.swing.JLabel lblErrorMessageAge;
    private javax.swing.JLabel lblErrorMessageBsId;
    private javax.swing.JLabel lblErrorMessageContact;
    private javax.swing.JLabel lblErrorMessageEmail;
    private javax.swing.JLabel lblErrorMessageExperience;
    private javax.swing.JLabel lblErrorMessageName;
    private javax.swing.JLabel lblErrorPassword;
    private javax.swing.JLabel lblErrorUserName;
    private javax.swing.JLabel lblExperience;
    private javax.swing.JLabel lblForImageInLoginSc;
    private javax.swing.JLabel lblImage1;
    private javax.swing.JLabel lblImage2;
    private javax.swing.JLabel lblInfoContact;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPhoneImage;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblToAddTitle;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JLabel lblVision1;
    private javax.swing.JLabel lblVision2;
    private javax.swing.JLabel lblVision3;
    private javax.swing.JLabel lblVision4;
    private javax.swing.JLabel lblWelcomeAdmin;
    private javax.swing.JLabel loadingImageLbl;
    private javax.swing.JLabel loadingLbl;
    private javax.swing.JLabel loadingValueLbl;
    private javax.swing.JButton logOutBtn;
    private javax.swing.JButton mainScBtn;
    private javax.swing.JLabel memoryLbl;
    private javax.swing.JLabel memoryLbl1;
    private javax.swing.JPasswordField passwordFld;
    private javax.swing.JProgressBar pgBarSplashSc;
    private javax.swing.JPanel pnlAboutUs;
    private javax.swing.JPanel pnlForm;
    private javax.swing.JPanel pnlHomeScreen;
    private javax.swing.JPanel pnlLoadingScreen;
    private javax.swing.JPanel pnlLogInScreen;
    private javax.swing.JPanel pnlLoginDetails;
    private javax.swing.JPanel pnlMainTitle;
    private javax.swing.JPanel pnlSearchSort;
    private javax.swing.JPanel pnlSideMenuBar;
    private javax.swing.JScrollPane spTblBabysitter;
    private javax.swing.JPanel tblPnl;
    private javax.swing.JTable tblToDisplayBabysitterInfo;
    private javax.swing.JTextField txtFieldAddress;
    private javax.swing.JTextField txtFieldAge;
    private javax.swing.JTextField txtFieldBabysitterId;
    private javax.swing.JTextField txtFieldContact;
    private javax.swing.JTextField txtFieldEmail;
    private javax.swing.JTextField txtFieldExperience;
    private javax.swing.JTextField txtFieldName;
    private javax.swing.JTextField txtFldSearch;
    private javax.swing.JTextField txtFldUserName;
    private javax.swing.JButton updateBtn;
    private javax.swing.JLabel visionLbl;
    private javax.swing.JLabel whatWeDoLbl;
    // End of variables declaration//GEN-END:variables

}
