/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.KidSpire.View;

import com.KidSpire.model.BabysitterModel;
import com.KidSpire.util.ValidationUtil;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import java.awt.Color;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kiransaud 23048603
 */
public class BabysitterManagement extends javax.swing.JFrame {

    private java.awt.CardLayout cardLayout;//A cardlayout to manage the switching of multiple panels in a container.
    private final Color errorColor = new Color(255, 51, 0);//Define color to display error
    private final Color successColor = new Color(0, 0, 0);//Define color for successful entry
    private DefaultTableModel defaultTableModel;
    private LinkedList<BabysitterModel> babysitterList;

    /**
     * Creates new form KidSpire
     */
    public BabysitterManagement() {
        initComponents();
        loadLoginScreen();
        initializeLayout();
        startProgress();

        babysitterList = new LinkedList<>();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAdminScreen = new javax.swing.JPanel();
        pnlMainTitle = new javax.swing.JPanel();
        lblToAddTitle = new javax.swing.JLabel();
        lblForLogo = new javax.swing.JLabel();
        logOutBtn = new javax.swing.JButton();
        pnlSideMenuBar = new javax.swing.JPanel();
        lblWelcomeAdmin = new javax.swing.JLabel();
        btnAddBabySitter = new javax.swing.JButton();
        lblAdmin = new javax.swing.JLabel();
        adminWelcomePnl = new javax.swing.JPanel();
        lblImageAdminSc = new javax.swing.JLabel();
        pnlLogInScreen = new javax.swing.JPanel();
        pnlLoginDetails = new javax.swing.JPanel();
        lblLogin = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        txtFldUserName = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        btnLogIn = new javax.swing.JButton();
        lblErrorUserName = new javax.swing.JLabel();
        lblErrorPassword = new javax.swing.JLabel();
        txtFldPassword = new javax.swing.JPasswordField();
        lblForImageInLoginSc = new javax.swing.JLabel();
        pnlBabySitter = new javax.swing.JPanel();
        pnlForm = new javax.swing.JPanel();
        lblBabysitterId = new javax.swing.JLabel();
        txtFieldBabysitterId = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblExperience = new javax.swing.JLabel();
        txtFieldName = new javax.swing.JTextField();
        txtFieldAge = new javax.swing.JTextField();
        txtFieldExperience = new javax.swing.JTextField();
        lblErrorMessageBsId = new javax.swing.JLabel();
        lblErrorMessageName = new javax.swing.JLabel();
        lblErrorMessageAge = new javax.swing.JLabel();
        lblErrorMessageExperience = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        txtFieldAddress = new javax.swing.JTextField();
        lblContact = new javax.swing.JLabel();
        lblErrorMessageAddress = new javax.swing.JLabel();
        txtFieldContact = new javax.swing.JTextField();
        lblErrorMessageContact = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtFieldEmail = new javax.swing.JTextField();
        lblErrorMessageEmail = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        mainScBtn = new javax.swing.JButton();
        pnlSearchSort = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        txtFldSearchBar = new javax.swing.JTextField();
        cbSort = new javax.swing.JComboBox<>();
        tblPnl = new javax.swing.JPanel();
        spTblBabysitter = new javax.swing.JScrollPane();
        tblToDisplayBabysitterInfo = new javax.swing.JTable();
        pnlLoadingScreen = new javax.swing.JPanel();
        pgBarSplashSc = new javax.swing.JProgressBar();
        lblImageForLoadingSc = new javax.swing.JLabel();

        pnlAdminScreen.setMaximumSize(new java.awt.Dimension(1000, 600));
        pnlAdminScreen.setMinimumSize(new java.awt.Dimension(1000, 600));
        pnlAdminScreen.setPreferredSize(new java.awt.Dimension(1000, 600));
        pnlAdminScreen.setSize(new java.awt.Dimension(1000, 600));

        pnlMainTitle.setBackground(new java.awt.Color(72, 75, 50));

        lblToAddTitle.setBackground(new java.awt.Color(255, 255, 255));
        lblToAddTitle.setFont(new java.awt.Font("Kannada MN", 0, 24)); // NOI18N
        lblToAddTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblToAddTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblToAddTitle.setText("Babysitter Management System");
        lblToAddTitle.setAlignmentX(0.5F);

        lblForLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Screenshot 2024-12-08 at 21.55.21.png"))); // NOI18N

        logOutBtn.setBackground(new java.awt.Color(102, 102, 102));
        logOutBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        logOutBtn.setForeground(new java.awt.Color(255, 255, 255));
        logOutBtn.setText("Logout");
        logOutBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        logOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainTitleLayout = new javax.swing.GroupLayout(pnlMainTitle);
        pnlMainTitle.setLayout(pnlMainTitleLayout);
        pnlMainTitleLayout.setHorizontalGroup(
            pnlMainTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblForLogo)
                .addGap(182, 182, 182)
                .addComponent(lblToAddTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logOutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        pnlMainTitleLayout.setVerticalGroup(
            pnlMainTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMainTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainTitleLayout.createSequentialGroup()
                        .addComponent(lblForLogo, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainTitleLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlMainTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(logOutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblToAddTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34))))
        );

        pnlSideMenuBar.setBackground(new java.awt.Color(102, 102, 102));
        pnlSideMenuBar.setMaximumSize(new java.awt.Dimension(230, 400));
        pnlSideMenuBar.setMinimumSize(new java.awt.Dimension(230, 400));
        pnlSideMenuBar.setPreferredSize(new java.awt.Dimension(230, 400));
        pnlSideMenuBar.setSize(new java.awt.Dimension(230, 400));

        lblWelcomeAdmin.setFont(new java.awt.Font("Hiragino Sans GB", 0, 18)); // NOI18N
        lblWelcomeAdmin.setForeground(new java.awt.Color(255, 255, 255));
        lblWelcomeAdmin.setText("Welcome, Admin");

        btnAddBabySitter.setBackground(new java.awt.Color(173, 165, 158));
        btnAddBabySitter.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        btnAddBabySitter.setForeground(new java.awt.Color(255, 255, 255));
        btnAddBabySitter.setText("BabySitter");
        btnAddBabySitter.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAddBabySitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddBabySitterActionPerformed(evt);
            }
        });

        lblAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/IMG_6620.JPG"))); // NOI18N
        lblAdmin.setSize(new java.awt.Dimension(182, 158));

        javax.swing.GroupLayout pnlSideMenuBarLayout = new javax.swing.GroupLayout(pnlSideMenuBar);
        pnlSideMenuBar.setLayout(pnlSideMenuBarLayout);
        pnlSideMenuBarLayout.setHorizontalGroup(
            pnlSideMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSideMenuBarLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(pnlSideMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddBabySitter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSideMenuBarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblWelcomeAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        pnlSideMenuBarLayout.setVerticalGroup(
            pnlSideMenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSideMenuBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblWelcomeAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddBabySitter, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(206, Short.MAX_VALUE))
        );

        adminWelcomePnl.setBackground(new java.awt.Color(242, 240, 222));
        adminWelcomePnl.setMaximumSize(new java.awt.Dimension(749, 465));
        adminWelcomePnl.setMinimumSize(new java.awt.Dimension(749, 465));
        adminWelcomePnl.setPreferredSize(new java.awt.Dimension(749, 465));
        adminWelcomePnl.setSize(new java.awt.Dimension(749, 465));

        lblImageAdminSc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Screenshot 2024-12-24 at 06.33.39.png"))); // NOI18N
        lblImageAdminSc.setSize(new java.awt.Dimension(749, 465));

        javax.swing.GroupLayout adminWelcomePnlLayout = new javax.swing.GroupLayout(adminWelcomePnl);
        adminWelcomePnl.setLayout(adminWelcomePnlLayout);
        adminWelcomePnlLayout.setHorizontalGroup(
            adminWelcomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminWelcomePnlLayout.createSequentialGroup()
                .addComponent(lblImageAdminSc, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        adminWelcomePnlLayout.setVerticalGroup(
            adminWelcomePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImageAdminSc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlAdminScreenLayout = new javax.swing.GroupLayout(pnlAdminScreen);
        pnlAdminScreen.setLayout(pnlAdminScreenLayout);
        pnlAdminScreenLayout.setHorizontalGroup(
            pnlAdminScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMainTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlAdminScreenLayout.createSequentialGroup()
                .addComponent(pnlSideMenuBar, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(adminWelcomePnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlAdminScreenLayout.setVerticalGroup(
            pnlAdminScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminScreenLayout.createSequentialGroup()
                .addComponent(pnlMainTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAdminScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSideMenuBar, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adminWelcomePnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlLogInScreen.setBackground(new java.awt.Color(72, 75, 50));
        pnlLogInScreen.setMaximumSize(new java.awt.Dimension(1000, 600));
        pnlLogInScreen.setMinimumSize(new java.awt.Dimension(1000, 600));
        pnlLogInScreen.setPreferredSize(new java.awt.Dimension(1000, 600));
        pnlLogInScreen.setSize(new java.awt.Dimension(1000, 600));

        pnlLoginDetails.setBackground(new java.awt.Color(255, 255, 255));
        pnlLoginDetails.setMaximumSize(new java.awt.Dimension(414, 496));
        pnlLoginDetails.setMinimumSize(new java.awt.Dimension(414, 496));
        pnlLoginDetails.setPreferredSize(new java.awt.Dimension(414, 496));
        pnlLoginDetails.setSize(new java.awt.Dimension(414, 496));

        lblLogin.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        lblLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogin.setText("Log In");

        lblUserName.setFont(new java.awt.Font("Kannada Sangam MN", 0, 18)); // NOI18N
        lblUserName.setText("User Name");

        txtFldUserName.setMaximumSize(new java.awt.Dimension(319, 50));
        txtFldUserName.setMinimumSize(new java.awt.Dimension(319, 50));
        txtFldUserName.setPreferredSize(new java.awt.Dimension(319, 50));
        txtFldUserName.setSize(new java.awt.Dimension(319, 50));
        txtFldUserName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldUserNameActionPerformed(evt);
            }
        });

        lblPassword.setFont(new java.awt.Font("Kannada Sangam MN", 0, 18)); // NOI18N
        lblPassword.setText("Password");

        btnLogIn.setBackground(new java.awt.Color(51, 51, 51));
        btnLogIn.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        btnLogIn.setForeground(new java.awt.Color(255, 255, 255));
        btnLogIn.setText("Log in");
        btnLogIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogInActionPerformed(evt);
            }
        });

        txtFldPassword.setMaximumSize(new java.awt.Dimension(319, 50));
        txtFldPassword.setMinimumSize(new java.awt.Dimension(319, 50));
        txtFldPassword.setPreferredSize(new java.awt.Dimension(319, 50));
        txtFldPassword.setSize(new java.awt.Dimension(319, 50));
        txtFldPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlLoginDetailsLayout = new javax.swing.GroupLayout(pnlLoginDetails);
        pnlLoginDetails.setLayout(pnlLoginDetailsLayout);
        pnlLoginDetailsLayout.setHorizontalGroup(
            pnlLoginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginDetailsLayout.createSequentialGroup()
                .addGroup(pnlLoginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLoginDetailsLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(pnlLoginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblLogin)
                            .addComponent(lblErrorPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlLoginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblUserName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblPassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblErrorUserName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFldUserName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtFldPassword, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pnlLoginDetailsLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(btnLogIn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlLoginDetailsLayout.setVerticalGroup(
            pnlLoginDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUserName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFldUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrorUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblErrorPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogIn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblForImageInLoginSc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/0lBYs copy 2.jpeg"))); // NOI18N
        lblForImageInLoginSc.setMaximumSize(new java.awt.Dimension(414, 496));
        lblForImageInLoginSc.setMinimumSize(new java.awt.Dimension(414, 496));
        lblForImageInLoginSc.setPreferredSize(new java.awt.Dimension(414, 496));
        lblForImageInLoginSc.setSize(new java.awt.Dimension(414, 496));

        javax.swing.GroupLayout pnlLogInScreenLayout = new javax.swing.GroupLayout(pnlLogInScreen);
        pnlLogInScreen.setLayout(pnlLogInScreenLayout);
        pnlLogInScreenLayout.setHorizontalGroup(
            pnlLogInScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLogInScreenLayout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addComponent(lblForImageInLoginSc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlLoginDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );
        pnlLogInScreenLayout.setVerticalGroup(
            pnlLogInScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLogInScreenLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(pnlLogInScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblForImageInLoginSc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlLoginDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        pnlBabySitter.setBackground(new java.awt.Color(255, 255, 255));
        pnlBabySitter.setMaximumSize(new java.awt.Dimension(1000, 680));
        pnlBabySitter.setMinimumSize(new java.awt.Dimension(1000, 680));
        pnlBabySitter.setPreferredSize(new java.awt.Dimension(1000, 680));
        pnlBabySitter.setRequestFocusEnabled(false);
        pnlBabySitter.setSize(new java.awt.Dimension(1000, 680));

        pnlForm.setBackground(new java.awt.Color(204, 185, 121));
        pnlForm.setMaximumSize(new java.awt.Dimension(1000, 360));
        pnlForm.setMinimumSize(new java.awt.Dimension(1000, 360));
        pnlForm.setPreferredSize(new java.awt.Dimension(1000, 360));
        pnlForm.setSize(new java.awt.Dimension(1000, 360));

        lblBabysitterId.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblBabysitterId.setText("Babysitter Id");
        lblBabysitterId.setMaximumSize(new java.awt.Dimension(156, 46));
        lblBabysitterId.setMinimumSize(new java.awt.Dimension(156, 46));
        lblBabysitterId.setPreferredSize(new java.awt.Dimension(156, 46));
        lblBabysitterId.setSize(new java.awt.Dimension(156, 46));

        txtFieldBabysitterId.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtFieldBabysitterId.setMaximumSize(new java.awt.Dimension(209, 39));
        txtFieldBabysitterId.setMinimumSize(new java.awt.Dimension(209, 39));
        txtFieldBabysitterId.setPreferredSize(new java.awt.Dimension(209, 39));
        txtFieldBabysitterId.setSize(new java.awt.Dimension(209, 39));

        lblName.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblName.setText("Name");
        lblName.setMaximumSize(new java.awt.Dimension(156, 46));
        lblName.setMinimumSize(new java.awt.Dimension(156, 46));
        lblName.setPreferredSize(new java.awt.Dimension(156, 46));
        lblName.setSize(new java.awt.Dimension(156, 46));

        lblAge.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblAge.setText("Age");
        lblAge.setMaximumSize(new java.awt.Dimension(156, 46));
        lblAge.setMinimumSize(new java.awt.Dimension(156, 46));
        lblAge.setPreferredSize(new java.awt.Dimension(156, 46));
        lblAge.setSize(new java.awt.Dimension(156, 46));

        lblExperience.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblExperience.setText("Experience");
        lblExperience.setMaximumSize(new java.awt.Dimension(156, 46));
        lblExperience.setMinimumSize(new java.awt.Dimension(156, 46));
        lblExperience.setPreferredSize(new java.awt.Dimension(156, 46));
        lblExperience.setSize(new java.awt.Dimension(156, 46));

        txtFieldName.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtFieldName.setMaximumSize(new java.awt.Dimension(209, 39));
        txtFieldName.setMinimumSize(new java.awt.Dimension(209, 39));
        txtFieldName.setPreferredSize(new java.awt.Dimension(209, 39));
        txtFieldName.setSize(new java.awt.Dimension(209, 39));

        txtFieldAge.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtFieldAge.setMaximumSize(new java.awt.Dimension(209, 39));
        txtFieldAge.setMinimumSize(new java.awt.Dimension(209, 39));
        txtFieldAge.setPreferredSize(new java.awt.Dimension(209, 39));
        txtFieldAge.setSize(new java.awt.Dimension(209, 39));

        txtFieldExperience.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtFieldExperience.setMaximumSize(new java.awt.Dimension(209, 39));
        txtFieldExperience.setMinimumSize(new java.awt.Dimension(209, 39));
        txtFieldExperience.setPreferredSize(new java.awt.Dimension(209, 39));
        txtFieldExperience.setSize(new java.awt.Dimension(209, 39));

        lblErrorMessageBsId.setMaximumSize(new java.awt.Dimension(232, 30));
        lblErrorMessageBsId.setMinimumSize(new java.awt.Dimension(232, 30));
        lblErrorMessageBsId.setPreferredSize(new java.awt.Dimension(232, 30));
        lblErrorMessageBsId.setSize(new java.awt.Dimension(232, 30));

        lblErrorMessageName.setMaximumSize(new java.awt.Dimension(236, 30));
        lblErrorMessageName.setMinimumSize(new java.awt.Dimension(236, 30));
        lblErrorMessageName.setPreferredSize(new java.awt.Dimension(236, 30));
        lblErrorMessageName.setSize(new java.awt.Dimension(236, 30));

        lblErrorMessageAge.setMaximumSize(new java.awt.Dimension(233, 30));
        lblErrorMessageAge.setMinimumSize(new java.awt.Dimension(233, 30));
        lblErrorMessageAge.setPreferredSize(new java.awt.Dimension(233, 30));
        lblErrorMessageAge.setSize(new java.awt.Dimension(233, 30));

        lblErrorMessageExperience.setMaximumSize(new java.awt.Dimension(214, 30));
        lblErrorMessageExperience.setMinimumSize(new java.awt.Dimension(214, 30));
        lblErrorMessageExperience.setPreferredSize(new java.awt.Dimension(214, 30));
        lblErrorMessageExperience.setSize(new java.awt.Dimension(214, 30));

        lblAddress.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblAddress.setText("Address");
        lblAddress.setMaximumSize(new java.awt.Dimension(156, 46));
        lblAddress.setMinimumSize(new java.awt.Dimension(156, 46));
        lblAddress.setPreferredSize(new java.awt.Dimension(156, 46));
        lblAddress.setSize(new java.awt.Dimension(156, 46));

        txtFieldAddress.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtFieldAddress.setMaximumSize(new java.awt.Dimension(209, 39));
        txtFieldAddress.setMinimumSize(new java.awt.Dimension(209, 39));
        txtFieldAddress.setPreferredSize(new java.awt.Dimension(209, 39));
        txtFieldAddress.setSize(new java.awt.Dimension(209, 39));
        txtFieldAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldAddressActionPerformed(evt);
            }
        });

        lblContact.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblContact.setText("Contact Number");
        lblContact.setMaximumSize(new java.awt.Dimension(156, 46));
        lblContact.setMinimumSize(new java.awt.Dimension(156, 46));
        lblContact.setPreferredSize(new java.awt.Dimension(156, 46));
        lblContact.setSize(new java.awt.Dimension(156, 46));

        lblErrorMessageAddress.setMaximumSize(new java.awt.Dimension(232, 34));
        lblErrorMessageAddress.setMinimumSize(new java.awt.Dimension(232, 34));
        lblErrorMessageAddress.setPreferredSize(new java.awt.Dimension(232, 34));
        lblErrorMessageAddress.setSize(new java.awt.Dimension(232, 34));

        txtFieldContact.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtFieldContact.setMaximumSize(new java.awt.Dimension(209, 39));
        txtFieldContact.setMinimumSize(new java.awt.Dimension(209, 39));
        txtFieldContact.setPreferredSize(new java.awt.Dimension(209, 39));
        txtFieldContact.setSize(new java.awt.Dimension(209, 39));

        lblErrorMessageContact.setMaximumSize(new java.awt.Dimension(236, 34));
        lblErrorMessageContact.setMinimumSize(new java.awt.Dimension(236, 34));
        lblErrorMessageContact.setPreferredSize(new java.awt.Dimension(236, 34));
        lblErrorMessageContact.setSize(new java.awt.Dimension(236, 34));

        lblEmail.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblEmail.setText("Email");
        lblEmail.setMaximumSize(new java.awt.Dimension(156, 46));
        lblEmail.setMinimumSize(new java.awt.Dimension(156, 46));
        lblEmail.setPreferredSize(new java.awt.Dimension(156, 46));
        lblEmail.setSize(new java.awt.Dimension(156, 46));

        txtFieldEmail.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtFieldEmail.setMaximumSize(new java.awt.Dimension(209, 39));
        txtFieldEmail.setMinimumSize(new java.awt.Dimension(209, 39));
        txtFieldEmail.setPreferredSize(new java.awt.Dimension(209, 39));
        txtFieldEmail.setSize(new java.awt.Dimension(209, 39));

        lblErrorMessageEmail.setMaximumSize(new java.awt.Dimension(308, 34));
        lblErrorMessageEmail.setMinimumSize(new java.awt.Dimension(308, 34));
        lblErrorMessageEmail.setPreferredSize(new java.awt.Dimension(308, 34));
        lblErrorMessageEmail.setSize(new java.awt.Dimension(308, 34));

        addBtn.setBackground(new java.awt.Color(102, 102, 102));
        addBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        addBtn.setForeground(new java.awt.Color(255, 255, 255));
        addBtn.setText("Add");
        addBtn.setMaximumSize(new java.awt.Dimension(78, 43));
        addBtn.setMinimumSize(new java.awt.Dimension(78, 43));
        addBtn.setPreferredSize(new java.awt.Dimension(78, 43));
        addBtn.setSize(new java.awt.Dimension(78, 43));
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        updateBtn.setBackground(new java.awt.Color(102, 102, 102));
        updateBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setText("Update");
        updateBtn.setMaximumSize(new java.awt.Dimension(78, 43));
        updateBtn.setMinimumSize(new java.awt.Dimension(78, 43));
        updateBtn.setPreferredSize(new java.awt.Dimension(78, 43));
        updateBtn.setSize(new java.awt.Dimension(78, 43));
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setBackground(new java.awt.Color(102, 102, 102));
        deleteBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        deleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteBtn.setText("Delete");
        deleteBtn.setMaximumSize(new java.awt.Dimension(78, 43));
        deleteBtn.setMinimumSize(new java.awt.Dimension(78, 43));
        deleteBtn.setPreferredSize(new java.awt.Dimension(78, 43));
        deleteBtn.setSize(new java.awt.Dimension(78, 43));
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        mainScBtn.setBackground(new java.awt.Color(51, 51, 51));
        mainScBtn.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        mainScBtn.setForeground(new java.awt.Color(255, 255, 255));
        mainScBtn.setText("Home");
        mainScBtn.setMaximumSize(new java.awt.Dimension(78, 43));
        mainScBtn.setMinimumSize(new java.awt.Dimension(78, 43));
        mainScBtn.setPreferredSize(new java.awt.Dimension(78, 43));
        mainScBtn.setSize(new java.awt.Dimension(78, 43));
        mainScBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainScBtnActionPerformed(evt);
            }
        });

        pnlSearchSort.setBackground(new java.awt.Color(204, 185, 121));
        pnlSearchSort.setMaximumSize(new java.awt.Dimension(320, 65));
        pnlSearchSort.setMinimumSize(new java.awt.Dimension(320, 65));
        pnlSearchSort.setPreferredSize(new java.awt.Dimension(320, 65));
        pnlSearchSort.setSize(new java.awt.Dimension(320, 65));

        btnSearch.setMaximumSize(new java.awt.Dimension(44, 31));
        btnSearch.setMinimumSize(new java.awt.Dimension(44, 31));
        btnSearch.setPreferredSize(new java.awt.Dimension(44, 31));
        btnSearch.setSize(new java.awt.Dimension(44, 31));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtFldSearchBar.setText("Search......");
        txtFldSearchBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtFldSearchBar.setMaximumSize(new java.awt.Dimension(205, 31));
        txtFldSearchBar.setMinimumSize(new java.awt.Dimension(205, 31));
        txtFldSearchBar.setPreferredSize(new java.awt.Dimension(205, 31));
        txtFldSearchBar.setSize(new java.awt.Dimension(205, 31));
        txtFldSearchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldSearchBarActionPerformed(evt);
            }
        });

        cbSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sort by id", "Sort by name", "Sort by experience", " " }));
        cbSort.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cbSort.setMaximumSize(new java.awt.Dimension(148, 31));
        cbSort.setMinimumSize(new java.awt.Dimension(148, 31));
        cbSort.setPreferredSize(new java.awt.Dimension(148, 31));
        cbSort.setSize(new java.awt.Dimension(148, 31));
        cbSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSearchSortLayout = new javax.swing.GroupLayout(pnlSearchSort);
        pnlSearchSort.setLayout(pnlSearchSortLayout);
        pnlSearchSortLayout.setHorizontalGroup(
            pnlSearchSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchSortLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFldSearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbSort, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlSearchSortLayout.setVerticalGroup(
            pnlSearchSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchSortLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlSearchSortLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbSort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFldSearchBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlFormLayout = new javax.swing.GroupLayout(pnlForm);
        pnlForm.setLayout(pnlFormLayout);
        pnlFormLayout.setHorizontalGroup(
            pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addComponent(pnlSearchSort, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mainScBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblErrorMessageAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtFieldBabysitterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBabysitterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblErrorMessageBsId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtFieldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblErrorMessageContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblErrorMessageName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFieldContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblErrorMessageEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlFormLayout.createSequentialGroup()
                                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblErrorMessageAge, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(19, 19, 19)
                                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblExperience, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFieldExperience, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblErrorMessageExperience, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlFormLayout.setVerticalGroup(
            pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBabysitterId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblExperience, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldBabysitterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFieldExperience, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblErrorMessageBsId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrorMessageName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrorMessageAge, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrorMessageExperience, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtFieldAddress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtFieldContact, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblErrorMessageAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrorMessageContact, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrorMessageEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlSearchSort, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mainScBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(72, 72, 72))
        );

        tblPnl.setBackground(new java.awt.Color(204, 204, 204));

        tblToDisplayBabysitterInfo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tblToDisplayBabysitterInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Babysitter Id", "Name", "Age", "Experience", "Address", "Contact", "Email"
            }
        ));
        tblToDisplayBabysitterInfo.setMaximumSize(new java.awt.Dimension(1000, 330));
        tblToDisplayBabysitterInfo.setMinimumSize(new java.awt.Dimension(1000, 330));
        tblToDisplayBabysitterInfo.setPreferredSize(new java.awt.Dimension(1000, 330));
        tblToDisplayBabysitterInfo.setSize(new java.awt.Dimension(1000, 330));
        tblToDisplayBabysitterInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblToDisplayBabysitterInfoMouseClicked(evt);
            }
        });
        spTblBabysitter.setViewportView(tblToDisplayBabysitterInfo);

        javax.swing.GroupLayout tblPnlLayout = new javax.swing.GroupLayout(tblPnl);
        tblPnl.setLayout(tblPnlLayout);
        tblPnlLayout.setHorizontalGroup(
            tblPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spTblBabysitter)
        );
        tblPnlLayout.setVerticalGroup(
            tblPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblPnlLayout.createSequentialGroup()
                .addComponent(spTblBabysitter, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlBabySitterLayout = new javax.swing.GroupLayout(pnlBabySitter);
        pnlBabySitter.setLayout(pnlBabySitterLayout);
        pnlBabySitterLayout.setHorizontalGroup(
            pnlBabySitterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBabySitterLayout.createSequentialGroup()
                .addGroup(pnlBabySitterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlForm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tblPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlBabySitterLayout.setVerticalGroup(
            pnlBabySitterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBabySitterLayout.createSequentialGroup()
                .addComponent(pnlForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tblPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlLoadingScreen.setBackground(new java.awt.Color(255, 255, 255));
        pnlLoadingScreen.setMaximumSize(new java.awt.Dimension(1000, 600));
        pnlLoadingScreen.setMinimumSize(new java.awt.Dimension(1000, 600));
        pnlLoadingScreen.setPreferredSize(new java.awt.Dimension(1000, 600));
        pnlLoadingScreen.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pgBarSplashSc.setBackground(new java.awt.Color(204, 204, 204));
        pgBarSplashSc.setForeground(new java.awt.Color(34, 125, 143));
        pnlLoadingScreen.add(pgBarSplashSc, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 550, 940, 40));

        lblImageForLoadingSc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/IMG_6471.JPG"))); // NOI18N
        pnlLoadingScreen.add(lblImageForLoadingSc, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 600));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 955, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLoadingScreen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void loadLoginScreen() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(pnlLogInScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pnlLogInScreen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

    }

    /**
     * Initializes the layout of the application by setting up the CardLayout
     * Adding panels for different screen.
     */
    private void initializeLayout() {

        cardLayout = new java.awt.CardLayout();
        getContentPane().setLayout(cardLayout);

        // Add panels with unique identifiers
        getContentPane().add(pnlLoadingScreen, "LoadingScreen");
        getContentPane().add(pnlLogInScreen, "LoginScreen");
        getContentPane().add(pnlAdminScreen, "MainScreen");
        getContentPane().add(pnlBabySitter, "BabysitterScreen");

        // Start with the loading screen
        cardLayout.show(getContentPane(), "LoadingScreen");
    }

    /**
     * Switches the application screen to the specified screen name.
     *
     * @param screenName The name of the screen to display.
     */
    private void loadScreen(String screenName) {
        cardLayout.show(getContentPane(), screenName);
    }

    /**
     * Simulates the loading progress using a SwingWorker thread. Updates a
     * progress bar incrementally and switches to the login screen upon
     * completion.
     */
    private void startProgress() {

        javax.swing.SwingWorker<Void, Integer> worker = new javax.swing.SwingWorker<>() {
            @Override
            protected Void doInBackground() throws Exception {
                for (int i = 0; i <= 100; i++) {
                    Thread.sleep(30); // Simulated delay for progress bar
                    publish(i); // Publish progress

                }
                return null;
            }

            @Override
            protected void process(java.util.List<Integer> chunks) {
                int progress = chunks.get(chunks.size() - 1);
                pgBarSplashSc.setValue(progress);
            }

            @Override
            protected void done() {
                loadScreen("LoginScreen"); // Switch to login screen
            }
        };
        worker.execute(); // Start the worker thread
    }

    public void addBabysittersToTabel(BabysitterModel babysitterList) {

    }


    private void logOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutBtnActionPerformed
        txtFldPassword.setText("");
        txtFldUserName.setText("");
        loadScreen("LoginScreen"); // Load the main screen
    }//GEN-LAST:event_logOutBtnActionPerformed

    private void btnAddBabySitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddBabySitterActionPerformed
        loadScreen("BabysitterScreen"); //Load Babysitter screen 
    }//GEN-LAST:event_btnAddBabySitterActionPerformed
//    // Method to add Babysitters info and populate the table
//    private void registerBabysitters(BabysitterModel babysitter) {
//        babysitterList.add(babysitter);
//        DefaultTableModel model = (DefaultTableModel) tblToDisplayBabysitterInfo.getModel();
//        model.addRow(new Object[]{
//            babysitter.getBabysitterId(), babysitter.getName(), babysitter.getAge(),
//            babysitter.getContact(), babysitter.getEmail(), babysitter.getExperience(), babysitter.getAddress()
//        });
//    }

    /**
     * login admin in the system by checking whether the entered username and
     * password are correct or not
     *
     * @param evt The event triggered by login button
     */

    private void btnLogInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogInActionPerformed
        //Get data from user name and password textfiled
        String userName = txtFldUserName.getText();
        String password = new String(txtFldPassword.getPassword());

        boolean hasError = false;

        //check if user name
        if (userName.isEmpty()) {
            lblErrorUserName.setText("*Please enter user Name");//Display message to inform user name is empty
            lblErrorUserName.setForeground(errorColor);
            txtFldUserName.setBorder(createLineBorder(errorColor));
            hasError = true;
            //check if user name is incorrect
        } else if (!userName.equals("Admin")) {
            lblErrorUserName.setText("*Please enter correct user Name");
            lblErrorUserName.setForeground(errorColor);
            txtFldUserName.setBorder(createLineBorder(errorColor));

            hasError = true;

        } else {
            lblErrorUserName.setText(" ");//clear text from Name error label
            txtFldUserName.setBorder(createLineBorder(successColor));

        }
        //check if password filed is empty 
        if (password.isEmpty()) {
            lblErrorPassword.setText("*Please enter password");//Display message to inform password is empty
            lblErrorPassword.setForeground(errorColor);
            txtFldPassword.setBorder(createLineBorder(errorColor));
            hasError = true;
            //Check if password is incorrect
        } else if (!password.equals("admin")) {
            lblErrorPassword.setText("*Please enter correct password");
            lblErrorPassword.setForeground(errorColor);
            txtFldPassword.setBorder(createLineBorder(errorColor));
            hasError = true;
        } else {
            lblErrorPassword.setText(" ");//clear text from password error label
            txtFldPassword.setBorder(createLineBorder(successColor));

        }
        //load manScreen if no error occur
        if (!hasError) {
            loadScreen("MainScreen");
        }
    }//GEN-LAST:event_btnLogInActionPerformed

    private void txtFldUserNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldUserNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldUserNameActionPerformed

    private void txtFieldAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldAddressActionPerformed
    /**
     * Handles all the validation while adding babysitters in babysitter list
     *
     * @param evt The event triggered by add button
     */
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        boolean isValid = true;
        txtFieldBabysitterId.setEditable(true);
        // Validate Babysitter ID
        isValid &= validateField(txtFieldBabysitterId, lblErrorMessageBsId, "Must contain 5 digit number only.",
                errorColor, successColor, ValidationUtil.isValidBabysitterId(txtFieldBabysitterId.getText())
        );

        // Validate Name
        isValid &= validateField(txtFieldName, lblErrorMessageName, "Must contain only alphabets.",
                errorColor, successColor, ValidationUtil.isValidName(txtFieldName.getText())
        );

        // Validate Contact
        isValid &= validateField(
                txtFieldContact, lblErrorMessageContact, "Must start with 98 and have 10 digits.",
                errorColor, successColor, ValidationUtil.isValidContact(txtFieldContact.getText())
        );
        // Validate address
        isValid &= validateField(
                txtFieldAddress, lblErrorMessageAddress, "Must contain alphabets and comma.",
                errorColor, successColor, ValidationUtil.isValidAddress(txtFieldAddress.getText())
        );
        // Validate Age
        try {
            short age = Short.parseShort(txtFieldAge.getText().trim());
            isValid &= validateField(
                    txtFieldAge, lblErrorMessageAge, "Must be between 21 and 34.",
                    errorColor, successColor, ValidationUtil.isValidAge(age)
            );
        } catch (NumberFormatException e) {
            validateField(txtFieldAge, lblErrorMessageAge, "Must be a valid number.", errorColor, successColor, false);
            isValid = false;
        }
        //validate experience
        try {
            int experience = Integer.parseInt(txtFieldExperience.getText().trim());
            isValid &= validateField(
                    txtFieldExperience, lblErrorMessageExperience, "Must have atleast 1 year exp.",
                    errorColor, successColor, ValidationUtil.isValidExperience(experience)
            );
        } catch (NumberFormatException e) {
            validateField(txtFieldExperience, lblErrorMessageExperience, "Must be 3 or greater than three.", errorColor, successColor, false);
            isValid = false;
        }
        //Validate email
        isValid &= validateField(
                txtFieldEmail, lblErrorMessageEmail, "Enter a valid email in the format: example@domain.com.",
                errorColor, successColor, ValidationUtil.isVaildEmail(txtFieldEmail.getText())
        );
        //if all the validate are true then create new instance of babysitter
        if (isValid) {
            // Create a BabysitterModel instance
            BabysitterModel newBabysitter = new BabysitterModel(
                    Integer.parseInt(txtFieldBabysitterId.getText().trim()),
                    txtFieldName.getText().trim(),
                    Short.parseShort(txtFieldAge.getText().trim()),
                    txtFieldContact.getText().trim(),
                    Integer.parseInt(txtFieldExperience.getText().trim()),
                    txtFieldAddress.getText().trim(),
                    txtFieldEmail.getText().trim()
            );

            // Check for duplicate Babysitter Id
            if (checkDuplicateStudent(newBabysitter)) {
                txtFieldBabysitterId.setBorder(createLineBorder(errorColor));
                showDialogBox("LMU ID already exists.", "Duplicate Entry", JOptionPane.WARNING_MESSAGE);
            } else {
                // Add the babysitter if no duplicate is found
                babysitterList.add(newBabysitter);
                clearBabysitterForm();
                loadListToTable(babysitterList);

                showDialogBox("Babysitter added successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
        }

    }//GEN-LAST:event_addBtnActionPerformed
    /**
     * Handles the action event when the update button is clicked. It validates
     * the input fields (name, contact, address, age, experience, and email),
     * checks if a row is selected in the table, and if valid, updates the
     * selected babysitter’s information in the list and the table.
     *
     * @param evt the action event triggered by the update button
     */
    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        boolean isValid = true;
        int selectedRow = tblToDisplayBabysitterInfo.getSelectedRow();
        //Check if no row is selected
        if (selectedRow == -1) {
            showMessageBox("Select a row to update data from a table", "Select row", JOptionPane.WARNING_MESSAGE);
            return;// Stop execution if no row is selected
        }

        // Validate Name
        isValid &= validateField(txtFieldName, lblErrorMessageName, "Must contain only alphabets.",
                errorColor, successColor, ValidationUtil.isValidName(txtFieldName.getText())
        );

        // Validate Contact
        isValid &= validateField(
                txtFieldContact, lblErrorMessageContact, "Must start with 98 and have 10 digits.",
                errorColor, successColor, ValidationUtil.isValidContact(txtFieldContact.getText())
        );
        // Validate address
        isValid &= validateField(
                txtFieldAddress, lblErrorMessageAddress, "Must contain alphabets and comma.",
                errorColor, successColor, ValidationUtil.isValidAddress(txtFieldAddress.getText())
        );
        // Validate Age
        try {
            short age = Short.parseShort(txtFieldAge.getText().trim());
            isValid &= validateField(
                    txtFieldAge, lblErrorMessageAge, "Must be between 21 and 45.",
                    errorColor, successColor, ValidationUtil.isValidAge(age)
            );
        } catch (NumberFormatException e) {
            validateField(txtFieldAge, lblErrorMessageAge, "Must be a valid number.", errorColor, successColor, false);
            isValid = false;
        }
        //validate experience
        try {
            int experience = Integer.parseInt(txtFieldExperience.getText().trim());
            isValid &= validateField(
                    txtFieldExperience, lblErrorMessageExperience, "Must have atleast 1 year exp.",
                    errorColor, successColor, ValidationUtil.isValidExperience(experience)
            );
        } catch (NumberFormatException e) {
            validateField(txtFieldExperience, lblErrorMessageExperience, "Must be 3 or greater than three.", errorColor, successColor, false);
            isValid = false;
        }
        //Validate email
        isValid &= validateField(
                txtFieldEmail, lblErrorMessageEmail, "Enter a valid email in the format: example@domain.com.",
                errorColor, successColor, ValidationUtil.isVaildEmail(txtFieldEmail.getText())
        );
        try {
            if (isValid) {
                BabysitterModel udatedBabysitter = new BabysitterModel(
                        Integer.parseInt(txtFieldBabysitterId.getText().trim()),
                        txtFieldName.getText().trim(),
                        Short.parseShort(txtFieldAge.getText().trim()),
                        txtFieldContact.getText().trim(),
                        Integer.parseInt(txtFieldExperience.getText().trim()),
                        txtFieldAddress.getText().trim(),
                        txtFieldEmail.getText().trim());
                // Update the babysitter in the list based on the selected row
                babysitterList.set(selectedRow, udatedBabysitter);
                clearBabysitterForm();
                // Refresh the table
                loadListToTable(babysitterList);
                showMessageBox("Babysitter updated successfully", "Updated", JOptionPane.INFORMATION_MESSAGE);

            }
        } catch (IndexOutOfBoundsException e) {
            showMessageBox("Invalid row is selected.", "Invalid row", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_updateBtnActionPerformed
    /**
     * Handles the action event when the delete button is clicked. It performs
     * the following tasks: Makes the babysitter ID field editable. Checks if a
     * row is selected in the table. If no row is selected, it displays a
     * warning message. Retrieves the selected babysitter from the list and
     * removes it from both the list and the table model. Clears the babysitter
     * form fields. Displays a success message when the deletion is successful.
     * Catches any potential IndexOutOfBoundsException in case of invalid row
     * selection and shows an error message.
     *
     * @param evt the action event triggered by the delete button
     */
    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        txtFieldBabysitterId.setEditable(true);
        boolean isValid = true;
        try {
            int selectedRow = tblToDisplayBabysitterInfo.getSelectedRow();
            //Check if no row is selected
            if (selectedRow == -1) {
                showMessageBox("Select a row to delete data from table", "Select row", JOptionPane.WARNING_MESSAGE);
                return;// Stop execution if no row is selected
            }
            DefaultTableModel model = (DefaultTableModel) tblToDisplayBabysitterInfo.getModel();
            BabysitterModel selectedBabysitter = babysitterList.get(selectedRow);
            babysitterList.remove(selectedBabysitter);
            model.removeRow(selectedRow);
            clearBabysitterForm();
            showMessageBox("Data deleted successfully.", "Deleted", JOptionPane.INFORMATION_MESSAGE);
        } catch (IndexOutOfBoundsException e) {
            showMessageBox("Invalid row selected.", "Invalid row", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_deleteBtnActionPerformed

    private void mainScBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainScBtnActionPerformed
        loadScreen("MainScreen");
    }//GEN-LAST:event_mainScBtnActionPerformed
    /**
     * Handles the mouse click event on the table to load the selected
     * babysitter's details into the form fields. It retrieves the selected row,
     * checks if the row is valid, and populates the form with the corresponding
     * babysitter's data. If no valid row is selected, an error message is
     * shown.
     *
     * @param evt the mouse click event
     */
    private void tblToDisplayBabysitterInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblToDisplayBabysitterInfoMouseClicked
        try {
            int selectedRow = tblToDisplayBabysitterInfo.getSelectedRow();//Get selected row index
            //Check if the valid row is selected
            if (!babysitterList.isEmpty() && selectedRow != -1) {
                BabysitterModel babysitterInfo = babysitterList.get(selectedRow);
                txtFieldBabysitterId.setText(Integer.toString(babysitterInfo.getBabysitterId()));
                txtFieldBabysitterId.setEditable(false);
                txtFieldName.setText(babysitterInfo.getName());
                txtFieldAge.setText(Short.toString(babysitterInfo.getAge()));
                txtFieldContact.setText(babysitterInfo.getContact());
                txtFieldExperience.setText(Integer.toString(babysitterInfo.getExperience()));
                txtFieldAddress.setText(babysitterInfo.getAddress());
                txtFieldEmail.setText(babysitterInfo.getEmail());

            }

        } catch (IndexOutOfBoundsException e) {

            showMessageBox("Invalid row selected.", "Invalid row", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tblToDisplayBabysitterInfoMouseClicked

    private void txtFldSearchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldSearchBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldSearchBarActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchActionPerformed

    private void cbSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSortActionPerformed

    private void txtFldPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldPasswordActionPerformed

    /**
     * Populates the JTable with the current list of Babysitter records. Clears
     * existing rows in the table model before adding new data.
     */
    private void loadListToTable(LinkedList<BabysitterModel> babysitterList) {
        DefaultTableModel model = (DefaultTableModel) tblToDisplayBabysitterInfo.getModel();

        // Clear existing rows if needed
        model.setRowCount(0);

        // Populate the table with babysitter data
        babysitterList.forEach(babysitter -> model.addRow(new Object[]{
            babysitter.getBabysitterId(),
            babysitter.getName(),
            babysitter.getAge(),
            babysitter.getExperience(),
            babysitter.getAddress(),
            babysitter.getContact(),
            babysitter.getEmail()
        }));
    }

    /**
     * Display a message box with message tile and type of message
     *
     * @param message message to display
     * @param title the title for message
     * @param messageType the type of message i.e. information message error
     * message warning or confirmation message
     */
    private void showMessageBox(String message, String title, int messageType) {
        JOptionPane.showMessageDialog(this, message, title, messageType);
    }

    /**
     * Validates a single input field based on specific criteria and updates its
     * visual state.
     *
     * @param textField the JTextField to validate
     * @param errorLbl the JLabel to show error messages
     * @param errorMsg the error message to display for invalid input
     * @param errorColor the color for error borders and message for error
     * @param successColor the color for successful validation borders
     * @param isValidFormat whether the input satisfies the field-specific
     * validation criteria
     * @return true if the field passes validation, false otherwise
     */
    private boolean validateField(JTextField textField, JLabel errorLbl, String errorMsg, Color errorColor, Color successColor, boolean isValidFormat) {
        if (ValidationUtil.isNullOrEmpty(textField.getText())) {
            textField.setBorder(createLineBorder(errorColor));
            errorLbl.setText("Field cannot be empty!");
            errorLbl.setVisible(true);
            return false;
        } else if (!isValidFormat) {
            textField.setBorder(createLineBorder(errorColor));
            errorLbl.setText(errorMsg);
            errorLbl.setVisible(true);
            return false;
        } else {
            textField.setBorder(createLineBorder(successColor));
            errorLbl.setVisible(false);
            return true;
        }
    }

    /**
     * Creates a custom TitledBorder with specified color and title.
     *
     * @param color the color for the border and title
     *
     * @return a LineBorder instance
     */
    private javax.swing.border.Border createLineBorder(Color color) {
        return javax.swing.BorderFactory.createLineBorder(color, 2);
    }

    /**
     * Displays a message dialog box with the given message, title, and type.
     *
     * @param message the message to display
     * @param title the title of the dialog box
     * @param messageType the type of message (e.g., information, warning, or
     * error)
     */
    private void showDialogBox(String message, String title, int messageType) {
        JOptionPane.showMessageDialog(this, message, title, messageType);
    }

    /**
     * Clears all input fields in the student form. Resets each field's value to
     * an empty string.
     */
    private void clearBabysitterForm() {
        txtFieldBabysitterId.setText("");
        txtFieldName.setText("");
        txtFieldAge.setText("");
        txtFieldContact.setText("");
        txtFieldAddress.setText("");
        txtFieldEmail.setText("");
        txtFieldExperience.setText("");
    }

    /**
     * Checks whether a babysitter with the same babysitter ID already exists in
     * the babysitter list.
     *
     * @param babysitter the BabysitterModel object to check for duplicates
     * @return true if a duplicate is found, false otherwise
     */
    private boolean checkDuplicateStudent(BabysitterModel babysitter) {
        return babysitterList.stream()
                .anyMatch(existingBabysitter
                        -> existingBabysitter.getBabysitterId() == babysitter.getBabysitterId());
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BabysitterManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BabysitterManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BabysitterManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BabysitterManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BabysitterManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JPanel adminWelcomePnl;
    private javax.swing.JButton btnAddBabySitter;
    private javax.swing.JButton btnLogIn;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cbSort;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAdmin;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblBabysitterId;
    private javax.swing.JLabel lblContact;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblErrorMessageAddress;
    private javax.swing.JLabel lblErrorMessageAge;
    private javax.swing.JLabel lblErrorMessageBsId;
    private javax.swing.JLabel lblErrorMessageContact;
    private javax.swing.JLabel lblErrorMessageEmail;
    private javax.swing.JLabel lblErrorMessageExperience;
    private javax.swing.JLabel lblErrorMessageName;
    private javax.swing.JLabel lblErrorPassword;
    private javax.swing.JLabel lblErrorUserName;
    private javax.swing.JLabel lblExperience;
    private javax.swing.JLabel lblForImageInLoginSc;
    private javax.swing.JLabel lblForLogo;
    private javax.swing.JLabel lblImageAdminSc;
    private javax.swing.JLabel lblImageForLoadingSc;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblToAddTitle;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JLabel lblWelcomeAdmin;
    private javax.swing.JButton logOutBtn;
    private javax.swing.JButton mainScBtn;
    private javax.swing.JProgressBar pgBarSplashSc;
    private javax.swing.JPanel pnlAdminScreen;
    private javax.swing.JPanel pnlBabySitter;
    private javax.swing.JPanel pnlForm;
    private javax.swing.JPanel pnlLoadingScreen;
    private javax.swing.JPanel pnlLogInScreen;
    private javax.swing.JPanel pnlLoginDetails;
    private javax.swing.JPanel pnlMainTitle;
    private javax.swing.JPanel pnlSearchSort;
    private javax.swing.JPanel pnlSideMenuBar;
    private javax.swing.JScrollPane spTblBabysitter;
    private javax.swing.JPanel tblPnl;
    private javax.swing.JTable tblToDisplayBabysitterInfo;
    private javax.swing.JTextField txtFieldAddress;
    private javax.swing.JTextField txtFieldAge;
    private javax.swing.JTextField txtFieldBabysitterId;
    private javax.swing.JTextField txtFieldContact;
    private javax.swing.JTextField txtFieldEmail;
    private javax.swing.JTextField txtFieldExperience;
    private javax.swing.JTextField txtFieldName;
    private javax.swing.JPasswordField txtFldPassword;
    private javax.swing.JTextField txtFldSearchBar;
    private javax.swing.JTextField txtFldUserName;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables

}
